{"ast":null,"code":"import getPokemons from '../services/pokemons';\nimport axios from 'axios';\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\nimport produce from 'immer';\n\nconst pokemonsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_POKEMONS':\n      console.log('action', action);\n      console.log('action: ', action.data);\n      return action.data;\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const fetchPokemons = (limit, offset) => {\n  return async () => {\n    try {\n      const pokemons = loadPokemonsFromLS(limit, offset);\n      produce(draft => {\n        draft.pokemons.push(pokemons);\n      });\n    } catch (error) {\n      const pokemons = await getPokemons.getPokemons(limit, offset);\n      let pokemonsArray = [];\n      let pokemonsObject = {};\n      pokemons.results.forEach(async (r, i) => {\n        //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n        const pokemonNow = await axios.get(r.url);\n        pokemonsArray.push(pokemonNow.data);\n        pokemonsObject[i] = pokemonNow.data;\n      });\n      savePokemonsList(limit, offset, pokemonsObject);\n      produce(draft => {\n        draft.pokemons.push(pokemons);\n      });\n    }\n  };\n};\nexport default pokemonsReducer;","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/reducers/pokemonsReducer.js"],"names":["getPokemons","axios","loadPokemonsFromLS","savePokemonsList","produce","pokemonsReducer","state","action","type","console","log","data","fetchPokemons","limit","offset","pokemons","draft","push","error","pokemonsArray","pokemonsObject","results","forEach","r","i","pokemonNow","get","url"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,+BAArD;AACA,OAAOC,OAAP,MAAoB,OAApB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,MAAM,CAACI,IAA/B;AACA,aAAOJ,MAAM,CAACI,IAAd;;AACJ;AACI,aAAOL,KAAP;AANR;;AAOC;AACJ,CATD;;AAWA,OAAO,MAAMM,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAO,YAAY;AACf,QAAI;AACA,YAAMC,QAAQ,GAAGb,kBAAkB,CAACW,KAAD,EAAQC,MAAR,CAAnC;AACAV,MAAAA,OAAO,CAACY,KAAK,IAAI;AACbA,QAAAA,KAAK,CAACD,QAAN,CAAeE,IAAf,CAAoBF,QAApB;AACH,OAFM,CAAP;AAGH,KALD,CAKE,OAAOG,KAAP,EAAc;AACZ,YAAMH,QAAQ,GAAG,MAAMf,WAAW,CAACA,WAAZ,CAAwBa,KAAxB,EAA+BC,MAA/B,CAAvB;AACA,UAAIK,aAAa,GAAG,EAApB;AACA,UAAIC,cAAc,GAAG,EAArB;AACAL,MAAAA,QAAQ,CAACM,OAAT,CAAiBC,OAAjB,CAAyB,OAAOC,CAAP,EAAUC,CAAV,KAAgB;AACrC;AACA,cAAMC,UAAU,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAUH,CAAC,CAACI,GAAZ,CAAzB;AACAR,QAAAA,aAAa,CAACF,IAAd,CAAmBQ,UAAU,CAACd,IAA9B;AACAS,QAAAA,cAAc,CAACI,CAAD,CAAd,GAAoBC,UAAU,CAACd,IAA/B;AACH,OALD;AAMAR,MAAAA,gBAAgB,CAACU,KAAD,EAAQC,MAAR,EAAgBM,cAAhB,CAAhB;AACAhB,MAAAA,OAAO,CAACY,KAAK,IAAI;AACbA,QAAAA,KAAK,CAACD,QAAN,CAAeE,IAAf,CAAoBF,QAApB;AACH,OAFM,CAAP;AAGH;AACJ,GArBD;AAsBH,CAvBM;AAyBP,eAAeV,eAAf","sourcesContent":["import getPokemons from '../services/pokemons';\r\nimport axios from 'axios';\r\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\r\nimport produce from 'immer';\r\n\r\nconst pokemonsReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'INIT_POKEMONS':\r\n            console.log('action', action)\r\n            console.log('action: ', action.data);\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const fetchPokemons = (limit, offset) => {\r\n    return async () => {\r\n        try {\r\n            const pokemons = loadPokemonsFromLS(limit, offset);\r\n            produce(draft => {\r\n                draft.pokemons.push(pokemons)\r\n            })\r\n        } catch (error) {\r\n            const pokemons = await getPokemons.getPokemons(limit, offset);\r\n            let pokemonsArray = [];\r\n            let pokemonsObject = {};\r\n            pokemons.results.forEach(async (r, i) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemonNow = await axios.get(r.url);\r\n                pokemonsArray.push(pokemonNow.data);\r\n                pokemonsObject[i] = pokemonNow.data\r\n            });\r\n            savePokemonsList(limit, offset, pokemonsObject);\r\n            produce(draft => {\r\n                draft.pokemons.push(pokemons)\r\n            })\r\n        }\r\n    };\r\n};\r\n\r\nexport default pokemonsReducer;"]},"metadata":{},"sourceType":"module"}