{"ast":null,"code":"import signUpService from '../services/signUp';\nimport { newLogin } from './loginReducer';\nimport { notificationError } from './notificationReducer';\n\nconst userReducer = (state = {\n  user: null\n}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        user: action.data\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const setUser = credentials => {\n  return async dispatch => {\n    try {\n      const user = await signUpService.signUp(credentials);\n      dispatch({\n        type: 'SET_USER',\n        data: user\n      });\n      const username = user.username;\n      const password = user.password;\n      const loginCredentials = {\n        username: username,\n        password: password\n      };\n      newLogin(loginCredentials);\n    } catch (error) {\n      dispatch(notificationError('Your account was not created, try again!'));\n      return null;\n    }\n  };\n};\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/reducers/userReducer.js"],"names":["signUpService","newLogin","notificationError","userReducer","state","user","action","type","data","setUser","credentials","dispatch","signUp","username","password","loginCredentials","error"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,EAAwBC,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAEC,MAAM,CAACE;AADV,OAAP;;AAGJ;AACI,aAAOJ,KAAP;AANR;;AAOC;AACJ,CATD;;AAWA,OAAO,MAAMK,OAAO,GAAIC,WAAD,IAAiB;AACpC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMN,IAAI,GAAG,MAAML,aAAa,CAACY,MAAd,CAAqBF,WAArB,CAAnB;AACAC,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,IAAI,EAAEH;AAFD,OAAD,CAAR;AAIA,YAAMQ,QAAQ,GAAGR,IAAI,CAACQ,QAAtB;AACA,YAAMC,QAAQ,GAAGT,IAAI,CAACS,QAAtB;AACA,YAAMC,gBAAgB,GAAG;AAAEF,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,QAAQ,EAAEA;AAAhC,OAAzB;AACAb,MAAAA,QAAQ,CAACc,gBAAD,CAAR;AACH,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZL,MAAAA,QAAQ,CAACT,iBAAiB,CAAC,0CAAD,CAAlB,CAAR;AACA,aAAO,IAAP;AACH;AACJ,GAfD;AAgBH,CAjBM;AAmBP,eAAeC,WAAf","sourcesContent":["import signUpService from '../services/signUp';\r\nimport { newLogin } from './loginReducer';\r\nimport { notificationError } from './notificationReducer';\r\n\r\nconst userReducer = (state = { user: null}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                user: action.data\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setUser = (credentials) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await signUpService.signUp(credentials);\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                data: user\r\n            });\r\n            const username = user.username;\r\n            const password = user.password;\r\n            const loginCredentials = { username: username, password: password };\r\n            newLogin(loginCredentials);\r\n        } catch (error) {\r\n            dispatch(notificationError('Your account was not created, try again!'));\r\n            return null;\r\n        }\r\n    }\r\n};\r\n\r\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}