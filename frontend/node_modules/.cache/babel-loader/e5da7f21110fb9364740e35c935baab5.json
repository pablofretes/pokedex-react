{"ast":null,"code":"import getPokemons from '../services/pokemons';\nimport axios from 'axios';\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\nexport const fetching = (limit, offset) => {\n  return async dispatch => {\n    try {\n      const pokemons = loadPokemonsFromLS(limit, offset);\n      dispatch({\n        type: 'INIT_POKEMONS',\n        data: pokemons\n      });\n    } catch (error) {\n      const pokemons = await getPokemons.getPokemons(limit, offset);\n      let pokemonsArray = [];\n      let pokemonsObject = {};\n      pokemons.results.forEach(async (r, i) => {\n        //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n        const pokemonNow = await axios.get(r.url);\n        pokemonsArray.push(pokemonNow.data);\n        pokemonsObject[i] = pokemonNow.data;\n      });\n      savePokemonsList(limit, offset, pokemonsObject);\n      dispatch({\n        type: 'INIT_POKEMONS',\n        data: pokemonsArray\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/reducers/actions.js"],"names":["getPokemons","axios","loadPokemonsFromLS","savePokemonsList","fetching","limit","offset","dispatch","pokemons","type","data","error","pokemonsArray","pokemonsObject","results","forEach","r","i","pokemonNow","get","url","push"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,+BAArD;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAGN,kBAAkB,CAACG,KAAD,EAAQC,MAAR,CAAnC;AACAC,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,IAAI,EAAEF;AAFD,OAAD,CAAR;AAIH,KAND,CAME,OAAOG,KAAP,EAAc;AACZ,YAAMH,QAAQ,GAAG,MAAMR,WAAW,CAACA,WAAZ,CAAwBK,KAAxB,EAA+BC,MAA/B,CAAvB;AACA,UAAIM,aAAa,GAAG,EAApB;AACA,UAAIC,cAAc,GAAG,EAArB;AACAL,MAAAA,QAAQ,CAACM,OAAT,CAAiBC,OAAjB,CAAyB,OAAOC,CAAP,EAAUC,CAAV,KAAgB;AACrC;AACA,cAAMC,UAAU,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAUH,CAAC,CAACI,GAAZ,CAAzB;AACAR,QAAAA,aAAa,CAACS,IAAd,CAAmBH,UAAU,CAACR,IAA9B;AACAG,QAAAA,cAAc,CAACI,CAAD,CAAd,GAAoBC,UAAU,CAACR,IAA/B;AACH,OALD;AAMAP,MAAAA,gBAAgB,CAACE,KAAD,EAAQC,MAAR,EAAgBO,cAAhB,CAAhB;AACAN,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,IAAI,EAAEE;AAFD,OAAD,CAAR;AAIH;AACJ,GAvBD;AAwBH,CAzBM","sourcesContent":["import getPokemons from '../services/pokemons';\r\nimport axios from 'axios';\r\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\r\n\r\nexport const fetching = (limit, offset) => {\r\n    return async dispatch => {\r\n        try {\r\n            const pokemons = loadPokemonsFromLS(limit, offset);\r\n            dispatch({\r\n                type: 'INIT_POKEMONS',\r\n                data: pokemons\r\n            });\r\n        } catch (error) {\r\n            const pokemons = await getPokemons.getPokemons(limit, offset);\r\n            let pokemonsArray = [];\r\n            let pokemonsObject = {};\r\n            pokemons.results.forEach(async (r, i) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemonNow = await axios.get(r.url);\r\n                pokemonsArray.push(pokemonNow.data);\r\n                pokemonsObject[i] = pokemonNow.data\r\n            });\r\n            savePokemonsList(limit, offset, pokemonsObject);\r\n            dispatch({\r\n                type: 'INIT_POKEMONS',\r\n                data: pokemonsArray\r\n            });\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}