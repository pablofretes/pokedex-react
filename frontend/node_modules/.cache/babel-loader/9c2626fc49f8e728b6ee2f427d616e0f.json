{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\frontend\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport signUp from '../services/signUp';\nimport { Field, Formik, Form } from 'formik';\nimport { Button } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router';\nimport TextField from './TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  username: yup.string().required().min(5, 'Username must contain at least 5 characters').max(20, 'Username must not contain more than 20 characters'),\n  password: yup.string().required().min(5, 'Username must contain at least 5 characters').max(20, 'Username must not contain more than 20 characters'),\n  name: yup.string().required()\n});\n\nconst SignUp = ({\n  setUser\n}) => {\n  _s();\n\n  const history = useHistory();\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const credentials = {\n      username: event.target.username.value,\n      password: event.target.password.value,\n      name: event.target.name.value\n    };\n\n    try {\n      const user = await signUp.signUp(credentials);\n\n      if (user) {\n        window.localStorage.setItem('loggedUser', JSON.stringify(user));\n        setUser(user);\n        history.push('/');\n      }\n\n      ;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      name: ''\n    },\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: ({\n      isValid,\n      dirty\n    }) => {\n      /*#__PURE__*/\n      _jsxDEV(Form, {\n        className: \"form ui\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          label: \"Username\",\n          placeholder: \"Username\",\n          name: \"username\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Name\",\n          placeholder: \"Name\",\n          name: \"name\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"pink\",\n          disabled: !dirty || !isValid,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/components/SignUp.js"],"names":["React","signUp","Field","Formik","Form","Button","yup","useHistory","TextField","validationSchema","object","shape","username","string","required","min","max","password","name","SignUp","setUser","history","onSubmit","event","preventDefault","credentials","target","value","user","window","localStorage","setItem","JSON","stringify","push","error","console","log","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport signUp from '../services/signUp';\r\nimport { Field, Formik, Form } from 'formik';\r\nimport { Button } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport TextField from './TextField';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters')\r\n        .max(20, 'Username must not contain more than 20 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters')\r\n        .max(20, 'Username must not contain more than 20 characters'),\r\n    name: yup\r\n        .string()\r\n        .required()\r\n})\r\n\r\nconst SignUp = ({ setUser }) => {\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const credentials = {\r\n            username: event.target.username.value,\r\n            password: event.target.password.value,\r\n            name: event.target.name.value\r\n        };\r\n\r\n        try {\r\n            const user = await signUp.signUp(credentials);\r\n            if(user){\r\n                window.localStorage.setItem('loggedUser', JSON.stringify(user))\r\n                setUser(user);\r\n                history.push('/');\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n            return null;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password:'',\r\n                name:''\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                <Form className=\"form ui\">\r\n                    <Field\r\n                        label=\"Username\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        component={TextField}\r\n                    />\r\n                    <Field\r\n                        label=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        component={TextField}\r\n                    />\r\n                    <Field\r\n                        label=\"Name\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                        component={TextField}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"pink\"\r\n                        disabled={!dirty || !isValid}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </Form>\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}