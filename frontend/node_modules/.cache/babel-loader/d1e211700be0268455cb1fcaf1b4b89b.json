{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PokemonsDisplay from './components/PokemonsDisplay';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './components/Home';\nimport AppBarPokemon from './components/AppBar';\nimport getPokemons from './services/pokemons';\nimport Types from './components/Types';\nimport IndividualPokemon from './components/IndividualPokemon';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [types, setTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [pokemon, setPokemon] = useState(null);\n  const [pokemons, setPokemons] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [limit, setLimit] = useState(20);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\n      const results = await getPokemons.getPokemons(limit, offset);\n      let urlArray = [];\n      results.results.forEach(async r => {\n        //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n        const pokemonNow = await axios.get(r.url);\n        urlArray.push(pokemonNow.data);\n\n        if (urlArray.length > 0) {\n          setPokemons([...urlArray]);\n        }\n\n        ;\n      });\n    };\n\n    fetchPokemons();\n  }, [offset, limit]);\n  useEffect(() => {\n    const fetchTypes = async () => {\n      const result = await getPokemons.getTypes();\n      let typesArray = [];\n      result.results.forEach(r => {\n        typesArray.push(r.name);\n        setTypes([...typesArray]);\n      });\n    };\n\n    fetchTypes();\n  }, []);\n  console.log(types);\n  const match = useRouteMatch('/pokemons/:id');\n  const pokemonMatch = match ? pokemons.find(p => p.id === match.params.id) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBarPokemon, {\n      types: types,\n      setSelectedType: setSelectedType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [pokemon.length > 0 ? /*#__PURE__*/_jsxDEV(Route, {\n        to: \"/pokemons/:id\",\n        children: /*#__PURE__*/_jsxDEV(IndividualPokemon, {\n          pokemon: pokemonMatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/pokemons\",\n        children: /*#__PURE__*/_jsxDEV(PokemonsDisplay, {\n          setPokemon: setPokemon,\n          pokemon: pokemon,\n          pokemons: pokemons,\n          setOffset: setOffset,\n          setLimit: setLimit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/types\",\n        children: /*#__PURE__*/_jsxDEV(Types, {\n          selectedType: selectedType,\n          setSelectedType: setSelectedType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Pitonx8ib6OiI4BWLAP/cOsNQSk=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/src/App.js"],"names":["React","useState","useEffect","PokemonsDisplay","Switch","Route","useRouteMatch","Home","AppBarPokemon","getPokemons","Types","IndividualPokemon","axios","App","types","setTypes","selectedType","setSelectedType","pokemon","setPokemon","pokemons","setPokemons","offset","setOffset","limit","setLimit","fetchPokemons","results","urlArray","forEach","r","pokemonNow","get","url","push","data","length","fetchTypes","result","getTypes","typesArray","name","console","log","match","pokemonMatch","find","p","id","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,aAAa,GAAG,YAAY;AAC9B;AACA,YAAMC,OAAO,GAAG,MAAMlB,WAAW,CAACA,WAAZ,CAAwBe,KAAxB,EAA+BF,MAA/B,CAAtB;AACA,UAAIM,QAAQ,GAAG,EAAf;AACAD,MAAAA,OAAO,CAACA,OAAR,CAAgBE,OAAhB,CAAwB,MAAOC,CAAP,IAAa;AACjC;AACA,cAAMC,UAAU,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUF,CAAC,CAACG,GAAZ,CAAzB;AACAL,QAAAA,QAAQ,CAACM,IAAT,CAAcH,UAAU,CAACI,IAAzB;;AACA,YAAGP,QAAQ,CAACQ,MAAT,GAAkB,CAArB,EAAuB;AACnBf,UAAAA,WAAW,CAAC,CAAC,GAAGO,QAAJ,CAAD,CAAX;AACH;;AAAA;AACJ,OAPD;AAQH,KAZD;;AAaAF,IAAAA,aAAa;AAChB,GAfQ,EAeN,CAACJ,MAAD,EAASE,KAAT,CAfM,CAAT;AAiBAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmC,UAAU,GAAG,YAAY;AAC3B,YAAMC,MAAM,GAAG,MAAM7B,WAAW,CAAC8B,QAAZ,EAArB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAF,MAAAA,MAAM,CAACX,OAAP,CAAeE,OAAf,CAAuBC,CAAC,IAAI;AACxBU,QAAAA,UAAU,CAACN,IAAX,CAAgBJ,CAAC,CAACW,IAAlB;AACA1B,QAAAA,QAAQ,CAAC,CAAC,GAAGyB,UAAJ,CAAD,CAAR;AACH,OAHD;AAIH,KAPD;;AAQAH,IAAAA,UAAU;AACX,GAVQ,EAUN,EAVM,CAAT;AAYAK,EAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AAEA,QAAM8B,KAAK,GAAGtC,aAAa,CAAC,eAAD,CAA3B;AACA,QAAMuC,YAAY,GAAGD,KAAK,GAAGxB,QAAQ,CAAC0B,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,KAAK,CAACK,MAAN,CAAaD,EAAzC,CAAH,GAAkD,IAA5E;AAEA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAElC,KAAtB;AAA6B,MAAA,eAAe,EAAEG;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,iBACGC,OAAO,CAACkB,MAAR,GAAiB,CAAjB,gBACC,QAAC,KAAD;AAAO,QAAA,EAAE,EAAC,eAAV;AAAA,+BACA,QAAC,iBAAD;AAAmB,UAAA,OAAO,EAAES;AAA5B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IALN,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,UAAU,EAAE1B,UAA7B;AAAyC,UAAA,OAAO,EAAED,OAAlD;AAA2D,UAAA,QAAQ,EAAEE,QAArE;AAA+E,UAAA,SAAS,EAAEG,SAA1F;AAAqG,UAAA,QAAQ,EAAEE;AAA/G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,YAAY,EAAET,YAArB;AAAmC,UAAA,eAAe,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAYE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEV;AAA3B;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7DD;;GAAMM,G;UAuCUP,a;;;KAvCVO,G;AA+DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport PokemonsDisplay from './components/PokemonsDisplay';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Home from './components/Home';\nimport AppBarPokemon from './components/AppBar';\nimport getPokemons from './services/pokemons';\nimport Types from './components/Types';\nimport IndividualPokemon from './components/IndividualPokemon';\nimport axios from 'axios';\n\nconst App = () => {\n  const [types, setTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [pokemon, setPokemon] = useState(null);\n  const [pokemons, setPokemons] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [limit, setLimit] = useState(20);\n\n  useEffect(() => {\n      const fetchPokemons = async () => {\n          //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\n          const results = await getPokemons.getPokemons(limit, offset);\n          let urlArray = [];\n          results.results.forEach(async (r) => {\n              //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n              const pokemonNow = await axios.get(r.url);\n              urlArray.push(pokemonNow.data);\n              if(urlArray.length > 0){\n                  setPokemons([...urlArray]);\n              };\n          });\n      }\n      fetchPokemons();\n  }, [offset, limit]);\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n        const result = await getPokemons.getTypes();\n        let typesArray = [];\n        result.results.forEach(r => {\n            typesArray.push(r.name);\n            setTypes([...typesArray]);\n        });\n    };\n    fetchTypes();\n  }, []);\n\n  console.log(types);\n\n  const match = useRouteMatch('/pokemons/:id');\n  const pokemonMatch = match ? pokemons.find(p => p.id === match.params.id) : null;\n\n  return (\n    <div>\n      <AppBarPokemon types={types} setSelectedType={setSelectedType}/>\n      <Switch>\n        {pokemon.length > 0 ? (\n          <Route to=\"/pokemons/:id\">\n          <IndividualPokemon pokemon={pokemonMatch} />\n      </Route>\n        ) : null}\n        <Route path=\"/pokemons\">\n          <PokemonsDisplay setPokemon={setPokemon} pokemon={pokemon} pokemons={pokemons} setOffset={setOffset} setLimit={setLimit}/>\n        </Route>\n        <Route path=\"/types\">\n          <Types selectedType={selectedType} setSelectedType={setSelectedType}/>\n        </Route>\n        <Route path=\"/\" component={Home}/>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}