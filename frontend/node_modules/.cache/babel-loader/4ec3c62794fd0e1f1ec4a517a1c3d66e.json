{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\src\\\\components\\\\Types.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport getPokemons from '../services/pokemons';\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  image: {\n    width: 100,\n    height: 'auto',\n    alignSelf: 'center'\n  }\n}));\n\nconst Types = ({\n  selectedType,\n  pokemonsType,\n  setPokemonsType\n}) => {\n  _s();\n\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      const result = await getPokemons.getIndividualType(selectedType);\n      let urlArray = [];\n      console.log(result);\n      result.pokemon.forEach(async r => {\n        try {\n          let poke = await axios.get(r.pokemon.url);\n          urlArray.push(poke.data);\n          setPokemonsType([...urlArray]);\n        } catch (error) {\n          console.log(error);\n        }\n      });\n    };\n\n    fetchPokemons(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: pokemonsType && pokemonsType.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: p.sprites.other[\"dream_world\"][\"front_default\"] === null ? null : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/pokemons/${p.id}`,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [\"#\", p.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 48\n              }, this), p.name, /*#__PURE__*/_jsxDEV(\"img\", {\n                className: classes.image,\n                alt: `${p.name}'s sprite`,\n                src: p.sprites.other[\"dream_world\"][\"front_default\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Types, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Types;\nexport default Types;\n\nvar _c;\n\n$RefreshReg$(_c, \"Types\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/src/components/Types.js"],"names":["React","useEffect","axios","getPokemons","Grid","makeStyles","Paper","Link","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","image","width","height","alignSelf","Types","selectedType","pokemonsType","setPokemonsType","classes","fetchPokemons","result","getIndividualType","urlArray","console","log","pokemon","forEach","r","poke","get","url","push","data","error","map","p","sprites","other","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,QAAwC,mBAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHvB,GAJ8B;AASnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,SAAS,EAAE;AAHR;AAT4B,CAAZ,CAAD,CAA5B;;AAgBA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAAqD;AAAA;;AAC/D,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4B,aAAa,GAAG,YAAY;AAC9B,YAAMC,MAAM,GAAG,MAAM3B,WAAW,CAAC4B,iBAAZ,CAA8BN,YAA9B,CAArB;AACA,UAAIO,QAAQ,GAAG,EAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,MAAAA,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuB,MAAOC,CAAP,IAAa;AAChC,YAAI;AACA,cAAIC,IAAI,GAAG,MAAMpC,KAAK,CAACqC,GAAN,CAAUF,CAAC,CAACF,OAAF,CAAUK,GAApB,CAAjB;AACAR,UAAAA,QAAQ,CAACS,IAAT,CAAcH,IAAI,CAACI,IAAnB;AACAf,UAAAA,eAAe,CAAC,CAAC,GAAGK,QAAJ,CAAD,CAAf;AACH,SAJD,CAIE,OAAOW,KAAP,EAAc;AACZV,UAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH;AACJ,OARD;AASH,KAbD;;AAcAd,IAAAA,aAAa,GAfD,CAgBhB;AACC,GAjBQ,EAiBN,CAACJ,YAAD,CAjBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEG,OAAO,CAAClB,IAAxB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACKgB,YAAY,IAAIA,YAAY,CAACkB,GAAb,CAAiBC,CAAC,iBAC/B;AAAA,kBACKA,CAAC,CAACC,OAAF,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,eAA/B,MAAoD,IAApD,GAA2D,IAA3D,gBACG,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,aAAYF,CAAC,CAACG,EAAG,EAA5B;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEpB,OAAO,CAAChB,KAA1B;AAAA,8BACMiC,CAAC,CAACG,EADR,eACW;AAAA;AAAA;AAAA;AAAA,sBADX,EAEKH,CAAC,CAACI,IAFP,eAGI;AAAK,gBAAA,SAAS,EAAErB,OAAO,CAACR,KAAxB;AAA+B,gBAAA,GAAG,EAAG,GAAEyB,CAAC,CAACI,IAAK,WAA9C;AAA0D,gBAAA,GAAG,EAAEJ,CAAC,CAACC,OAAF,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,eAA/B;AAA/D;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAuBF,CAAC,CAACG,EAAzB;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cADa;AADrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA7CD;;GAAMxB,K;UACchB,S;;;KADdgB,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport getPokemons from '../services/pokemons';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n      image: {\r\n          width: 100,\r\n          height: 'auto',\r\n          alignSelf: 'center',\r\n    },\r\n}));\r\n\r\nconst Types = ({ selectedType, pokemonsType, setPokemonsType }) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const fetchPokemons = async () => {\r\n            const result = await getPokemons.getIndividualType(selectedType);\r\n            let urlArray = [];\r\n            console.log(result);\r\n            result.pokemon.forEach(async (r) => {\r\n                try {\r\n                    let poke = await axios.get(r.pokemon.url);\r\n                    urlArray.push(poke.data);\r\n                    setPokemonsType([...urlArray]);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }\r\n        fetchPokemons();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedType]);\r\n    \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                {pokemonsType && pokemonsType.map(p => (\r\n                    <div>\r\n                        {p.sprites.other[\"dream_world\"][\"front_default\"] === null ? null : (\r\n                            <Grid item xs={3} key={p.id} >\r\n                                <Link to={`/pokemons/${p.id}`}>\r\n                                    <Paper className={classes.paper}>\r\n                                        #{p.id}<br></br>\r\n                                        {p.name}\r\n                                        <img className={classes.image} alt={`${p.name}'s sprite`} src={p.sprites.other[\"dream_world\"][\"front_default\"]}/>\r\n                                    </Paper>\r\n                                </Link>\r\n                            </Grid>\r\n                        )}\r\n                    </div>\r\n\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Types;"]},"metadata":{},"sourceType":"module"}