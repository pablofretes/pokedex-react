{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\src\\\\components\\\\PokemonsDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport getPokemons from '../services/pokemons';\nimport Paginations from './Paginations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonsDisplay = () => {\n  _s();\n\n  const [pokemons, setPokemons] = useState([]);\n  const [offset, setOffset] = useState(0);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\n      const results = await getPokemons.getPokemons(offset);\n      let urlArray = [];\n      results.results.forEach(async r => {\n        //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n        const pokemon = await axios.get(r.url);\n        urlArray.push(pokemon.data);\n\n        if (urlArray.length > 0) {\n          setPokemons([...urlArray]);\n        }\n      });\n    };\n\n    fetchPokemons();\n  }, [offset]);\n  console.log(pokemons);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [pokemons && pokemons.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: p.name\n    }, p.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 44\n    }, this)), /*#__PURE__*/_jsxDEV(Paginations, {\n      setOffset: setOffset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonsDisplay, \"GyRHgqMzu0KqioaiIV9sWKm4T7I=\");\n\n_c = PokemonsDisplay;\nexport default PokemonsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonsDisplay\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/src/components/PokemonsDisplay.js"],"names":["React","useState","useEffect","axios","getPokemons","Paginations","PokemonsDisplay","pokemons","setPokemons","offset","setOffset","fetchPokemons","results","urlArray","forEach","r","pokemon","get","url","push","data","length","console","log","map","p","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,aAAa,GAAG,YAAY;AAC9B;AACA,YAAMC,OAAO,GAAG,MAAMR,WAAW,CAACA,WAAZ,CAAwBK,MAAxB,CAAtB;AACA,UAAII,QAAQ,GAAG,EAAf;AACAD,MAAAA,OAAO,CAACA,OAAR,CAAgBE,OAAhB,CAAwB,MAAOC,CAAP,IAAa;AACjC;AACA,cAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUF,CAAC,CAACG,GAAZ,CAAtB;AACAL,QAAAA,QAAQ,CAACM,IAAT,CAAcH,OAAO,CAACI,IAAtB;;AACA,YAAGP,QAAQ,CAACQ,MAAT,GAAkB,CAArB,EAAuB;AACnBb,UAAAA,WAAW,CAAC,CAAC,GAAGK,QAAJ,CAAD,CAAX;AACH;AACJ,OAPD;AAQH,KAZD;;AAaAF,IAAAA,aAAa;AAChB,GAfQ,EAeN,CAACF,MAAD,CAfM,CAAT;AAiBAa,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AAEA,sBACI;AAAA,eACKA,QAAQ,IAAIA,QAAQ,CAACiB,GAAT,CAAaC,CAAC,iBAAI;AAAA,gBAAmBA,CAAC,CAACC;AAArB,OAAUD,CAAC,CAACC,IAAZ;AAAA;AAAA;AAAA;AAAA,YAAlB,CADjB,eAEI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEhB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA7BD;;GAAMJ,e;;KAAAA,e;AA+BN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport getPokemons from '../services/pokemons';\r\nimport Paginations from './Paginations';\r\n\r\nconst PokemonsDisplay = () => {\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchPokemons = async () => {\r\n            //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\r\n            const results = await getPokemons.getPokemons(offset);\r\n            let urlArray = [];\r\n            results.results.forEach(async (r) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemon = await axios.get(r.url);\r\n                urlArray.push(pokemon.data);\r\n                if(urlArray.length > 0){\r\n                    setPokemons([...urlArray]);\r\n                }\r\n            });\r\n        }\r\n        fetchPokemons();\r\n    }, [offset]);\r\n\r\n    console.log(pokemons);\r\n\r\n    return (\r\n        <div>\r\n            {pokemons && pokemons.map(p => <div key={p.name}>{p.name}</div>)}\r\n            <Paginations setOffset={setOffset}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonsDisplay;"]},"metadata":{},"sourceType":"module"}