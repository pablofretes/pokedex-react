{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\frontend\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport signUp from '../services/signUp';\nimport { Field, Formik, Form } from 'formik';\nimport { Button } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router';\nimport TextField from './TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  username: yup.string().required().min(5, 'Username must contain at least 5 characters').max(20, 'Username must not contain more than 20 characters'),\n  password: yup.string().required().min(5, 'Username must contain at least 5 characters').max(20, 'Username must not contain more than 20 characters'),\n  name: yup.string().required()\n});\n\nconst SignUp = ({\n  setUser\n}) => {\n  _s();\n\n  const history = useHistory();\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const credentials = {\n      username: event.username,\n      password: event.password,\n      name: event.name\n    };\n\n    try {\n      const user = await signUp.signUp(credentials);\n\n      if (user) {\n        window.localStorage.setItem('loggedUser', JSON.stringify(user));\n        setUser(user);\n        history.push('/');\n      }\n\n      ;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      name: ''\n    },\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form ui\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        label: \"Username\",\n        placeholder: \"Username\",\n        name: \"username\",\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Name\",\n        placeholder: \"Name\",\n        name: \"name\",\n        component: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"pink\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/components/SignUp.js"],"names":["React","signUp","Field","Formik","Form","Button","yup","useHistory","TextField","validationSchema","object","shape","username","string","required","min","max","password","name","SignUp","setUser","history","onSubmit","event","preventDefault","credentials","user","window","localStorage","setItem","JSON","stringify","push","error","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport signUp from '../services/signUp';\r\nimport { Field, Formik, Form } from 'formik';\r\nimport { Button } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport TextField from './TextField';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters')\r\n        .max(20, 'Username must not contain more than 20 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters')\r\n        .max(20, 'Username must not contain more than 20 characters'),\r\n    name: yup\r\n        .string()\r\n        .required()\r\n})\r\n\r\nconst SignUp = ({ setUser }) => {\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const credentials = {\r\n            username: event.username,\r\n            password: event.password,\r\n            name: event.name\r\n        };\r\n\r\n        try {\r\n            const user = await signUp.signUp(credentials);\r\n            if(user){\r\n                window.localStorage.setItem('loggedUser', JSON.stringify(user))\r\n                setUser(user);\r\n                history.push('/');\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n            return null;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password:'',\r\n                name:''\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <Form className=\"form ui\">\r\n                <Field\r\n                    label=\"Username\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    component={TextField}\r\n                />\r\n                <Field\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    component={TextField}\r\n                />\r\n                <Field\r\n                    label=\"Name\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    component={TextField}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    color=\"pink\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}