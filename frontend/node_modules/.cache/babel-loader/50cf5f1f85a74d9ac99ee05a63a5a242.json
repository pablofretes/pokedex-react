{"ast":null,"code":"import getPokemons from '../services/pokemons';\nimport axios from 'axios';\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\nimport produce from 'immer';\n\nconst pokemonsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_POKEMONS':\n      return produce(state, draft => {\n        draft.pokemons = action.data.pokemons;\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const fetchPokemons = (limit, offset) => {\n  return async dispatch => {\n    try {\n      const pokemons = loadPokemonsFromLS(limit, offset);\n      dispatch({\n        type: 'INIT_POKEMONS',\n        data: pokemons\n      });\n    } catch (error) {\n      const pokemons = await getPokemons.getPokemons(limit, offset);\n      let pokemonsArray = [];\n      let pokemonsObject = {};\n      pokemons.results.forEach(async (r, i) => {\n        //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n        const pokemonNow = await axios.get(r.url);\n        pokemonsArray.push(pokemonNow.data);\n        pokemonsObject[i] = pokemonNow.data;\n      });\n      savePokemonsList(limit, offset, pokemonsObject);\n      dispatch({\n        type: 'INIT_POKEMONS',\n        data: pokemonsArray\n      });\n    }\n  };\n};\nexport default pokemonsReducer;","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/reducers/pokemonsReducer.js"],"names":["getPokemons","axios","loadPokemonsFromLS","savePokemonsList","produce","pokemonsReducer","state","action","type","draft","pokemons","data","fetchPokemons","limit","offset","dispatch","error","pokemonsArray","pokemonsObject","results","forEach","r","i","pokemonNow","get","url","push"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,+BAArD;AACA,OAAOC,OAAP,MAAoB,OAApB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAOJ,OAAO,CAACE,KAAD,EAASG,KAAD,IAAW;AAC7BA,QAAAA,KAAK,CAACC,QAAN,GAAiBH,MAAM,CAACI,IAAP,CAAYD,QAA7B;AACH,OAFa,CAAd;;AAGJ;AACI,aAAOJ,KAAP;AANR;;AAOC;AACJ,CATD;;AAWA,OAAO,MAAMM,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAML,QAAQ,GAAGR,kBAAkB,CAACW,KAAD,EAAQC,MAAR,CAAnC;AACAC,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,eADD;AAELG,QAAAA,IAAI,EAAED;AAFD,OAAD,CAAR;AAIH,KAND,CAME,OAAOM,KAAP,EAAc;AACZ,YAAMN,QAAQ,GAAG,MAAMV,WAAW,CAACA,WAAZ,CAAwBa,KAAxB,EAA+BC,MAA/B,CAAvB;AACA,UAAIG,aAAa,GAAG,EAApB;AACA,UAAIC,cAAc,GAAG,EAArB;AACAR,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,OAAjB,CAAyB,OAAOC,CAAP,EAAUC,CAAV,KAAgB;AACrC;AACA,cAAMC,UAAU,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAUH,CAAC,CAACI,GAAZ,CAAzB;AACAR,QAAAA,aAAa,CAACS,IAAd,CAAmBH,UAAU,CAACZ,IAA9B;AACAO,QAAAA,cAAc,CAACI,CAAD,CAAd,GAAoBC,UAAU,CAACZ,IAA/B;AACH,OALD;AAMAR,MAAAA,gBAAgB,CAACU,KAAD,EAAQC,MAAR,EAAgBI,cAAhB,CAAhB;AACAH,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAE,eADD;AAELG,QAAAA,IAAI,EAAEM;AAFD,OAAD,CAAR;AAIH;AACJ,GAvBD;AAwBH,CAzBM;AA2BP,eAAeZ,eAAf","sourcesContent":["import getPokemons from '../services/pokemons';\r\nimport axios from 'axios';\r\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\r\nimport produce from 'immer';\r\n\r\nconst pokemonsReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'INIT_POKEMONS':\r\n            return produce(state, (draft) => {\r\n                draft.pokemons = action.data.pokemons\r\n            });\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const fetchPokemons = (limit, offset) => {\r\n    return async dispatch => {\r\n        try {\r\n            const pokemons = loadPokemonsFromLS(limit, offset);\r\n            dispatch({\r\n                type: 'INIT_POKEMONS',\r\n                data: pokemons\r\n            });\r\n        } catch (error) {\r\n            const pokemons = await getPokemons.getPokemons(limit, offset);\r\n            let pokemonsArray = [];\r\n            let pokemonsObject = {};\r\n            pokemons.results.forEach(async (r, i) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemonNow = await axios.get(r.url);\r\n                pokemonsArray.push(pokemonNow.data);\r\n                pokemonsObject[i] = pokemonNow.data\r\n            });\r\n            savePokemonsList(limit, offset, pokemonsObject);\r\n            dispatch({\r\n                type: 'INIT_POKEMONS',\r\n                data: pokemonsArray\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport default pokemonsReducer;"]},"metadata":{},"sourceType":"module"}