{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TextField from './TextField';\nimport { Field, Formik, Form } from 'formik';\nimport { Button } from '@material-ui/core';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router';\nimport login from '../services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  username: yup.string().required().min(5, 'Username must contain at least 5 characters'),\n  password: yup.string().required().min(5, 'Username must contain at least 5 characters')\n});\n\nconst Login = ({\n  setUser\n}) => {\n  _s();\n\n  const history = useHistory();\n\n  const onSubmit = async event => {\n    const credentials = {\n      username: event.target.username.value,\n      password: event.target.password.value\n    };\n\n    try {\n      const user = await login.login(credentials);\n\n      if (user) {\n        window.localStorage.setItem('loggedUser', JSON.stringify(user));\n        setUser(user);\n        history.push('/');\n      }\n\n      ;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: ({\n      dirty,\n      isValid\n    }) => {\n      /*#__PURE__*/\n      _jsxDEV(Form, {\n        className: \"form ui\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          label: \"Username\",\n          placeholder: \"Username\",\n          name: \"username\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"pink\",\n          disabled: !dirty || !isValid,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/components/Login.js"],"names":["React","TextField","Field","Formik","Form","Button","yup","useHistory","login","validationSchema","object","shape","username","string","required","min","password","Login","setUser","history","onSubmit","event","credentials","target","value","user","window","localStorage","setItem","JSON","stringify","push","error","console","log","dirty","isValid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,QAAQ,EAAEN,GAAG,CACRO,MADK,GAELC,QAFK,GAGLC,GAHK,CAGD,CAHC,EAGE,6CAHF,CAD8B;AAKxCC,EAAAA,QAAQ,EAAEV,GAAG,CACRO,MADK,GAELC,QAFK,GAGLC,GAHK,CAGD,CAHC,EAGE,6CAHF;AAL8B,CAAnB,CAAzB;;AAWA,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC3B,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,QAAMa,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B,UAAMC,WAAW,GAAG;AAChBV,MAAAA,QAAQ,EAAES,KAAK,CAACE,MAAN,CAAaX,QAAb,CAAsBY,KADhB;AAEhBR,MAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaP,QAAb,CAAsBQ;AAFhB,KAApB;;AAKA,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMjB,KAAK,CAACA,KAAN,CAAYc,WAAZ,CAAnB;;AACA,UAAGG,IAAH,EAAQ;AACJC,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0CC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA1C;AACAP,QAAAA,OAAO,CAACO,IAAD,CAAP;AACAN,QAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACH;;AAAA;AACJ,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,IAAP;AACH;;AAAA;AACJ,GAjBD;;AAmBA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXpB,MAAAA,QAAQ,EAAC,EADE;AAEXI,MAAAA,QAAQ,EAAC;AAFE,KADnB;AAKI,IAAA,gBAAgB,EAAEP,gBALtB;AAMI,IAAA,QAAQ,EAAEW,QANd;AAAA,cAQK,CAAC;AAACe,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAsB;AACnB;AAAA,cAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,WAAW,EAAC,UAFhB;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,SAAS,EAAEnC;AAJf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,WAAW,EAAC,UAFhB;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,SAAS,EAAEA;AAJf;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAaI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,KAAK,EAAC,MAFV;AAGI,UAAA,QAAQ,EAAE,CAACkC,KAAD,IAAU,CAACC,OAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBH;AA9BL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAxDD;;GAAMnB,K;UACcV,U;;;KADdU,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport TextField from './TextField';\r\nimport { Field, Formik, Form } from 'formik';\r\nimport { Button } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport login from '../services/login';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters'),\r\n});\r\n\r\nconst Login = ({ setUser }) => {\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        const credentials = {\r\n            username: event.target.username.value,\r\n            password: event.target.password.value,\r\n        };\r\n\r\n        try {\r\n            const user = await login.login(credentials);\r\n            if(user){\r\n                window.localStorage.setItem('loggedUser', JSON.stringify(user))\r\n                setUser(user);\r\n                history.push('/');\r\n            };    \r\n        } catch (error) {\r\n            console.log(error);\r\n            return null;\r\n        };\r\n    };\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password:'',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            {({dirty, isValid}) => {\r\n                <Form className=\"form ui\">\r\n                    <Field\r\n                        label=\"Username\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        component={TextField}\r\n                    />\r\n                    <Field\r\n                        label=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        component={TextField}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"pink\"\r\n                        disabled={!dirty || !isValid}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Form>\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}