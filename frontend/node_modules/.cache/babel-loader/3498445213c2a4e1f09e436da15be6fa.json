{"ast":null,"code":"import getPokemons from '../services/pokemons';\nimport axios from 'axios';\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\nimport raichu from './raichu.json';\n\nconst pokemonsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POKEMONS_BEGIN':\n      return [...state];\n\n    case 'INIT_POKEMONS':\n      return action.data;\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const fetchPokemons = (limit, offset) => {\n  return async dispatch => {\n    try {\n      const pokemons = [raichu];\n      /*let pokemonsArray = [];\r\n      let pokemonsObject = {};\r\n      pokemons.results.forEach(async (r, i) => {\r\n          //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n          const pokemonNow = await axios.get(r.url);\r\n          pokemonsArray.push(pokemonNow.data);\r\n          pokemonsObject[i] = pokemonNow.data\r\n      });\r\n      savePokemonsList(limit, offset, pokemonsObject);*/\n\n      dispatch({\n        type: 'INIT_POKEMONS',\n        data: pokemons\n      });\n    } catch (error) {\n      return null;\n    }\n\n    ;\n  };\n};\n/*\r\nexport const fetchPokemons = (limit, offset) => {\r\n    return async dispatch => {\r\n        try {\r\n            const pokemons = loadPokemonsFromLS(limit, offset);\r\n            dispatch({ type: 'INIT_POKEMONS', data: pokemons });\r\n        } catch (error) {\r\n            const pokemons = await getPokemons.getPokemons(limit, offset);\r\n            let pokemonsArray = [];\r\n            let pokemonsObject = {};\r\n            pokemons.results.forEach(async (r, i) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemonNow = await axios.get(r.url);\r\n                pokemonsArray.push(pokemonNow.data);\r\n                pokemonsObject[i] = pokemonNow.data\r\n            });\r\n            savePokemonsList(limit, offset, pokemonsObject);\r\n            dispatch({ type: 'INIT_POKEMONS', data: pokemonsArray });\r\n        };\r\n    };   \r\n};*/\n\nexport default pokemonsReducer;","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/frontend/src/reducers/pokemonsReducer.js"],"names":["getPokemons","axios","loadPokemonsFromLS","savePokemonsList","raichu","pokemonsReducer","state","action","type","data","fetchPokemons","limit","offset","dispatch","pokemons","error"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,+BAArD;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,sBAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,CAAP;;AACJ,SAAK,eAAL;AACI,aAAOC,MAAM,CAACE,IAAd;;AACJ;AACI,aAAOH,KAAP;AANR;;AAOC;AACJ,CATD;;AAWA,OAAO,MAAMI,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAG,CAACV,MAAD,CAAjB;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACYS,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,IAAI,EAAEK;AAA/B,OAAD,CAAR;AACH,KAZD,CAYE,OAAOC,KAAP,EAAc;AACZ,aAAO,IAAP;AACH;;AAAA;AACJ,GAhBD;AAiBH,CAlBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeV,eAAf","sourcesContent":["import getPokemons from '../services/pokemons';\r\nimport axios from 'axios';\r\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\r\nimport raichu from './raichu.json';\r\n\r\nconst pokemonsReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_POKEMONS_BEGIN':\r\n            return [...state];\r\n        case 'INIT_POKEMONS':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const fetchPokemons = (limit, offset) => {\r\n    return async dispatch => {\r\n        try {           \r\n            const pokemons = [raichu]\r\n            /*let pokemonsArray = [];\r\n            let pokemonsObject = {};\r\n            pokemons.results.forEach(async (r, i) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemonNow = await axios.get(r.url);\r\n                pokemonsArray.push(pokemonNow.data);\r\n                pokemonsObject[i] = pokemonNow.data\r\n            });\r\n            savePokemonsList(limit, offset, pokemonsObject);*/\r\n            dispatch({ type: 'INIT_POKEMONS', data: pokemons });\r\n        } catch (error) {\r\n            return null;\r\n        };\r\n    };   \r\n};\r\n/*\r\nexport const fetchPokemons = (limit, offset) => {\r\n    return async dispatch => {\r\n        try {\r\n            const pokemons = loadPokemonsFromLS(limit, offset);\r\n            dispatch({ type: 'INIT_POKEMONS', data: pokemons });\r\n        } catch (error) {\r\n            const pokemons = await getPokemons.getPokemons(limit, offset);\r\n            let pokemonsArray = [];\r\n            let pokemonsObject = {};\r\n            pokemons.results.forEach(async (r, i) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemonNow = await axios.get(r.url);\r\n                pokemonsArray.push(pokemonNow.data);\r\n                pokemonsObject[i] = pokemonNow.data\r\n            });\r\n            savePokemonsList(limit, offset, pokemonsObject);\r\n            dispatch({ type: 'INIT_POKEMONS', data: pokemonsArray });\r\n        };\r\n    };   \r\n};*/\r\n\r\nexport default pokemonsReducer;"]},"metadata":{},"sourceType":"module"}