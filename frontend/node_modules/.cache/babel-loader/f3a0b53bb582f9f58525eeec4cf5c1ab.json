{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablo\\\\OneDrive\\\\Escritorio\\\\pokedex-react\\\\pokedex\\\\src\\\\components\\\\PokemonsDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport getPokemons from '../services/pokemons';\nimport Paginations from './Paginations';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport IndividualPokemon from './IndividualPokemon';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  image: {\n    width: 100,\n    height: 'auto',\n    alignSelf: 'center'\n  }\n}));\n\nconst PokemonsDisplay = () => {\n  _s();\n\n  const classes = useStyles();\n  const [pokemons, setPokemons] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [limit, setLimit] = useState(20);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\n      const results = await getPokemons.getPokemons(limit, offset);\n      let urlArray = [];\n      results.results.forEach(async r => {\n        //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\n        const pokemon = await axios.get(r.url);\n        urlArray.push(pokemon.data);\n\n        if (urlArray.length > 0) {\n          setPokemons([...urlArray]);\n        }\n\n        ;\n      });\n    };\n\n    fetchPokemons();\n  }, [offset, limit]);\n  console.log(pokemons);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: pokemons && pokemons.map(p => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        component: Link,\n        to: `/pokemons/${p.id}`,\n        children: /*#__PURE__*/_jsxDEV(IndividualPokemon, {\n          classes: classes,\n          pokemon: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, p.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paginations, {\n      setOffset: setOffset,\n      setLimit: setLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonsDisplay, \"Nn4XtZFtP4ZmkTtimK5nw2E8c4c=\", false, function () {\n  return [useStyles];\n});\n\n_c = PokemonsDisplay;\nexport default PokemonsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonsDisplay\");","map":{"version":3,"sources":["C:/Users/pablo/OneDrive/Escritorio/pokedex-react/pokedex/src/components/PokemonsDisplay.js"],"names":["React","useState","useEffect","axios","getPokemons","Paginations","Grid","makeStyles","IndividualPokemon","Link","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","image","width","height","alignSelf","PokemonsDisplay","classes","pokemons","setPokemons","offset","setOffset","limit","setLimit","fetchPokemons","results","urlArray","forEach","r","pokemon","get","url","push","data","length","console","log","map","p","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport getPokemons from '../services/pokemons';\r\nimport Paginations from './Paginations';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport IndividualPokemon from './IndividualPokemon';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 'auto',\r\n        alignSelf: 'center',\r\n    },\r\n}));\r\n\r\nconst PokemonsDisplay = () => {\r\n    const classes = useStyles();\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(20);\r\n\r\n    useEffect(() => {\r\n        const fetchPokemons = async () => {\r\n            //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\r\n            const results = await getPokemons.getPokemons(limit, offset);\r\n            let urlArray = [];\r\n            results.results.forEach(async (r) => {\r\n                //FETCHES EACH POKEMON URL AND STORES ITS DATA ON pokemons STATE\r\n                const pokemon = await axios.get(r.url);\r\n                urlArray.push(pokemon.data);\r\n                if(urlArray.length > 0){\r\n                    setPokemons([...urlArray]);\r\n                };\r\n            });\r\n        }\r\n        fetchPokemons();\r\n    }, [offset, limit]);\r\n\r\n    console.log(pokemons);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                {pokemons && pokemons.map(p => (\r\n                    <Grid item xs={3} key={p.name} component={Link} to={`/pokemons/${p.id}`}>\r\n                        <IndividualPokemon classes={classes} pokemon={p}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Paginations setOffset={setOffset} setLimit={setLimit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonsDisplay;"]},"metadata":{},"sourceType":"module"}