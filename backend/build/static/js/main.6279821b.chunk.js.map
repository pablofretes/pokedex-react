{"version":3,"sources":["reducers/notificationReducer.js","hooks/usePagination.js","reducers/offsetReducer.js","reducers/currentPageReducer.js","components/Pagination.js","reducers/individualPokemonReducer.js","img/loading-transparent.gif","components/Loading.js","utils/functions.js","components/PokemonsDisplay.js","img/Pok√©dex_logo.png","img/pikachu(1).png","components/Home.js","services/pokemons.js","reducers/filterReducer.js","components/Filter.js","services/login.js","services/reviews.js","reducers/loginReducer.js","components/AppBar.js","components/IndividualPokemon.js","components/Notification.js","components/TextField.js","components/Login.js","services/signUp.js","components/SignUp.js","reducers/reviewsReducer.js","components/Reviews.js","utils/localStoragePokemons.js","reducers/pokemonsReducer.js","components/NewReview.js","App.js","reducers/userReducer.js","store.js","index.js"],"names":["timeout","DOTS","range","start","end","length","Array","from","_","idx","setOffset","value","type","data","Number","offsetReducer","state","action","pageSelection","page","currentPageReducer","newPage","useStyles","makeStyles","theme","root","marginTop","display","flexDirection","flexWrap","justifyContent","button","width","borderRadius","height","backgroundColor","fontFamily","fontWeight","paddingLeft","paddingRight","active","color","nextPrevious","Pagination","totalCount","siblingCount","pageSize","classes","dispatch","useDispatch","currentPage","useSelector","console","log","pagesTotal","Math","ceil","paginationRange","useMemo","totalPageCount","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","optionsArray","i","push","onPageChange","pageNumber","className","Button","onClick","map","onChange","event","target","style","marginLeft","getOnePokemon","pokemon","individualPokemonReducer","newState","parent","margin","gif","Loading","src","loading","alt","capsFirstLetter","str","toCapitalize","split","toUpperCase","substr","join","flexGrow","backGroundColor","paper","padding","spacing","palette","text","secondary","image","marginRight","gridItem","textDecoration","p","textAlign","PokemonsDisplay","pokemonsObject","pokemons","count","useState","setPokemons","useEffect","a","urlArray","results","forEach","r","axios","get","url","pokemonNow","awaitingPokemons","Grid","container","item","xs","component","Link","handleClick","to","name","Paper","elevation","id","sprites","other","logo","marginBottom","alignSelf","pokedex","pikachu","Home","baseUrl","getPokemons","offset","response","getPokemonByName","notificationError","message","clearInterval","setTimeout","notificationSuccess","notificationReducer","filterReducer","Filter","filter","history","useHistory","searchedPokemon","fetch","handleChange","preventDefault","filterInput","lowercasePokemon","toLowerCase","onSubmit","placeholder","login","credentials","post","token","getAll","request","create","newObject","config","headers","Authorization","setToken","newToken","deleteReview","delete","editReview","put","newLogin","loginService","userLog","window","localStorage","setItem","JSON","stringify","reviewsService","username","error","removeItem","loginReducer","appBar","position","top","right","AppBarPokemon","user","Box","AppBar","Toolbar","variant","Typography","fontSize","reviewButton","IndividualPokemon","obj","individualPokemon","Object","keys","types","t","stats","s","stat","base_stat","Notification","notification","Alert","severity","inputs","borderColor","borderWidth","TextField","field","logIn","validationSchema","yup","shape","required","password","Login","initialValues","label","signUp","getUsers","passwordConfirmation","oneOf","SignUp","signUpService","reviewsReducer","reviewToEdit","find","editedReview","content","rating","noReviews","borderStyle","reviewContainerStyle","alignItems","ratingContainerStyle","contentStyle","parent2","float","Reviews","reviews","userReviews","handleDelete","review","confirm","sprite","manyPokemonsKey","loadPokemonsFromLS","parse","getItem","Error","savePokemonsList","undefined","initPokemons","fetchEverything","pokemonsData","pokemonsReducer","input","maxWidth","div","NewReview","pokemonObject","reviewInput","toString","reviewRating","o","App","loggedUserJSON","existingLogin","path","userReducer","reducer","combineReducers","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","storeNow","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6279821b.chunk.js","sourcesContent":["const notificationReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'NOTIFICATION_ERROR':\r\n            return action.data;\r\n        case 'NOTIFICATION_SUCCESS':\r\n            return action.data;\r\n        case 'NOTIFICATION_DELETE':\r\n            return null;\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nlet timeout;\r\n\r\nexport const notificationError = (message) => {\r\n    return async dispatch => {\r\n        clearInterval(timeout);\r\n        timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'NOTIFICATION_DELETE',\r\n            })\r\n        }, 4000);\r\n\r\n        dispatch({\r\n            type: 'NOTIFICATION_ERROR',\r\n            data: {\r\n                message,\r\n                type: 'error'\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport const notificationSuccess = (message) => {\r\n    return async dispatch => {\r\n        clearInterval(timeout);\r\n        timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'NOTIFICATION_DELETE',\r\n            })\r\n        }, 4000);\r\n\r\n        dispatch({\r\n            type: 'NOTIFICATION_SUCCESS',\r\n            data: {\r\n                message,\r\n                type: 'success'\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport default notificationReducer;","import { useMemo } from \"react\";\r\n\r\nexport const DOTS = '...';\r\n\r\n//THIS CREATES AN ARRAY AND SETS THE ELEMENTS FROM START TO END\r\nconst range = (start, end) => {\r\n    let length = end - start + 1;\r\n    //SO IF FOR EXPAMPLE LENGTH IS 5 THEN THE ARRAY PRODUCED WOULD BE [1, 2, 3, 4, 5]\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n}\r\n\r\nexport const usePagination = ({ totalCount, pageSize, siblingCount = 1, currentPage }) => {\r\n\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        //IF THE NUMBER OF PAGES IF LESS THAN WHAT WE WANT TO SHOW IN OUR COMPONENT (DOESN'T APPLY TO OUR APP), WE RETURN THIS.\r\n        if(totalPageNumbers >= totalPageCount){\r\n            return range(1, totalPageCount);\r\n        };\r\n\r\n        //CALCULATE LEFT ND RIGHT SIBLING INDEX\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount);\r\n\r\n        //WE ONLY WANT TO SHOW DOTS IF THE DIFFERENCE BETWEEN OUR FIRST/LAST PAGE AND ITS SIBLING INDEX IS MORE THAN 2 \r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        //IF WE ONLY WANT TO SHOW RIGHT DOTS\r\n        if(!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        };\r\n\r\n        //IF WE ONLY WANT TO SHOW LEFT DOTS\r\n        if(!shouldShowRightDots && shouldShowLeftDots) {\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\r\n\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        };\r\n\r\n        //WE WANT TO SHOW DOTS RIGHT AND LEFT\r\n        if(shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        };\r\n\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};","const offsetReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'OFFSET':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setOffset = (value) => {\r\n    const offset = Number((value * 20) - 20);\r\n    return {\r\n        type: 'OFFSET',\r\n        data: offset,\r\n    };\r\n};\r\n\r\nexport default offsetReducer;","const currentPageReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        case 'SELECTION':\r\n            const newPage = action.data;\r\n            return newPage;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const pageSelection = (page) => {\r\n    return {\r\n        type: 'SELECTION',\r\n        data: page,\r\n    };\r\n};\r\n\r\nexport default currentPageReducer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DOTS, usePagination } from '../hooks/usePagination';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setOffset } from '../reducers/offsetReducer';\r\nimport { pageSelection } from '../reducers/currentPageReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 20,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center'\r\n    },\r\n    button: {\r\n        width: 20,\r\n        borderRadius: 50,\r\n        height: 30,\r\n        backgroundColor: '#E5709B',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 3,\r\n        paddingRight: 3\r\n    },\r\n    active: {\r\n        width: 20,\r\n        borderRadius: 50,\r\n        height: 30,\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 6,\r\n        paddingRight: 6\r\n    },\r\n    nextPrevious: {\r\n        width: 20,\r\n        borderRadius: 33,\r\n        height: 30,\r\n        backgroundColor: '#E5709B',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 3,\r\n        paddingRight: 3\r\n    },\r\n}));\r\n\r\nconst Pagination = ({ totalCount, siblingCount = 1, pageSize }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentPage = useSelector(state => state.currentPage);\r\n    console.log(currentPage);\r\n    const pagesTotal = Math.ceil(totalCount / pageSize);\r\n    const paginationRange = usePagination({ currentPage, totalCount, siblingCount, pageSize });\r\n\r\n    let optionsArray = [];\r\n\r\n    //JUST AN ARRAY TO BE ABLE TO SELECT ANY PAGE INSTEAD OF CLICKING MANY TIMES TO GO TO A SPECIFIC PAGE\r\n    for(let i = 1; i <= pagesTotal; i++){\r\n        optionsArray.push(i);\r\n    };\r\n\r\n    const onPageChange = (pageNumber) => {\r\n        dispatch(setOffset(pageNumber));\r\n        dispatch(pageSelection(pageNumber));\r\n    };\r\n    \r\n    const onNext = () => {\r\n        const page = Number(currentPage + 1);\r\n        dispatch(setOffset(page));\r\n        dispatch({ type: 'INCREMENT' });\r\n    };\r\n    \r\n    const onPrevious = () => {\r\n        const page = Number(currentPage - 1);\r\n        dispatch(setOffset(page));\r\n        dispatch({ type: 'DECREMENT' });\r\n    };\r\n    \r\n    const handleSelect = (event) => {\r\n        const page = Number(event.target.value);\r\n        dispatch(setOffset(page));\r\n        dispatch(pageSelection(page));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {currentPage === 1 ? null : (\r\n                <Button className={classes.nextPrevious} onClick={onPrevious} data-cy='previous-button'>&lt;</Button>\r\n            )}\r\n            {paginationRange.map(pageNumber => {\r\n                if(pageNumber === DOTS){\r\n                    return <div>&#8230;</div>\r\n                }\r\n\r\n                return(\r\n                    <div>\r\n                        {pageNumber === currentPage ? (\r\n                            <Button key={currentPage} className={classes.active} data-cy={`pagination-button-${pageNumber}`} onClick={() => onPageChange(pageNumber)} >{pageNumber}</Button>) : (\r\n                            <Button key={pageNumber} className={classes.button} data-cy={`pagination-button-${pageNumber}`} onClick={() => onPageChange(pageNumber)} >{pageNumber}</Button>\r\n                        )}\r\n                    </div>\r\n                );\r\n            })};\r\n            {currentPage === 45 ? null : (\r\n                <Button className={classes.nextPrevious} onClick={onNext} data-cy='next-button'>&gt;</Button>\r\n            )}\r\n            <select data-cy=\"select-page\" onChange={handleSelect} style={{ marginLeft: 10 }}>\r\n                {optionsArray.map((pageNumber, i) => {\r\n                    return <option data-cy={`select-page-${pageNumber}`} value={pageNumber} key={i}>{pageNumber}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","const individualPokemonReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'GET_POKEMON':\r\n            const newState = action.data;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const getOnePokemon = (pokemon) => {\r\n    return {\r\n        type: 'GET_POKEMON',\r\n        data: pokemon\r\n    };\r\n};\r\n\r\nexport default individualPokemonReducer;","export default __webpack_public_path__ + \"static/media/loading-transparent.757857ce.gif\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport loading from '../img/loading-transparent.gif'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    parent: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: 'auto',\r\n    },\r\n    gif: {\r\n        height: 50,\r\n        width: 50,\r\n        margin: 'auto',\r\n    }\r\n}))\r\n\r\nconst Loading = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.parent}>\r\n            <img className={classes.gif} src={loading} alt=\"Loading gif\" data-cy=\"loading-gif\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","export const capsFirstLetter = (str) => {\r\n    //SOME POKEMONS' STATS ARE SEPARATED BY A '-'. THIS FUNCTION ELIMINATES IT AND CAPITALIZES THE FIRST LETTER OF EACH WORD.\r\n    let toCapitalize = str.split(/-/);\r\n\r\n    for (let i = 0; i < toCapitalize.length; i++) {\r\n      toCapitalize[i] = toCapitalize[i][0].toUpperCase() + toCapitalize[i].substr(1);\r\n    };\r\n\r\n    const joined = toCapitalize.join(' ');\r\n\r\n    return joined;\r\n};\r\n\r\nexport const isEmpty = (obj) => {\r\n    return obj && Object.keys(obj).length === 0;\r\n};","import React, { useEffect, useState } from 'react';\r\nimport Pagination from './Pagination';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOnePokemon } from '../reducers/individualPokemonReducer';\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\nimport { capsFirstLetter } from '../utils/functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backGroundColor: '#222222'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 120,\r\n        display: 'block',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    gridItem : {\r\n        textDecoration: 'none',\r\n        justifyContent: 'center'\r\n    },\r\n    color: {\r\n        backgroundColor: '#E5709B',\r\n    },\r\n    p: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nconst PokemonsDisplay = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const pokemonsObject = useSelector(state => state.pokemons);\r\n    const pageSize = 20;\r\n    const totalCount = pokemonsObject.count;\r\n    const [pokemons, setPokemons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const awaitingPokemons = async () => {\r\n            //THIS FUNCTION GETS EVERY POKEMON ON OUR pokemons STORE AND PUSHES THEM TO A REACT STATE.\r\n            //EVERY TIME OUR pokemons STORE CHANGES THIS FUNCTION RUNS FETCHES THE NEW POKEMMONS ONCE AGAIN\r\n            let urlArray = [];\r\n\r\n            pokemonsObject.results.forEach(async (r) => {\r\n                const pokemonNow = await axios.get(r.url);\r\n                urlArray.push(pokemonNow.data);\r\n                if(urlArray.length > 0){\r\n                    setPokemons([...urlArray]);\r\n                };\r\n            });\r\n        };\r\n        awaitingPokemons();\r\n    }, [pokemonsObject]);\r\n\r\n    const handleClick = (p) => {\r\n        //IF A POKEMON IS CLICKED WE STORE IT INTO OUR individualPokemon STORE\r\n        dispatch(getOnePokemon(p));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                {pokemons.length < 18 ? <Loading /> : \r\n                (\r\n                    <Grid container spacing={3}>\r\n                        {pokemons.map((p) => (\r\n                    <Grid item xs={3} key={p.name} className={classes.gridItem} component={Link} onClick={() => handleClick(p)} to={`/pokemons/${p.name}`} data-cy={`pokemon-button-${p.name}`}>\r\n                            <Paper className={classes.paper && classes.color} elevation={10}>\r\n                                <p className={classes.p}>#{p.id}</p>\r\n                                <p className={classes.p}>{capsFirstLetter(p.name)}</p>\r\n                                <img className={classes.image} alt={`${p.name}'s sprite`} src={p.sprites.other[\"official-artwork\"][\"front_default\"]}/>\r\n                            </Paper>\r\n                    </Grid>\r\n                ))}\r\n                    </Grid>\r\n                )}\r\n            <Pagination\r\n                totalCount={totalCount} \r\n                pageSize={pageSize}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonsDisplay;","export default __webpack_public_path__ + \"static/media/Pok√©dex_logo.907dcf3a.png\";","export default __webpack_public_path__ + \"static/media/pikachu(1).91857373.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport pokedex from '../img/Pok√©dex_logo.png';\r\nimport pikachu from '../img/pikachu(1).png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        flexGrow: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    logo: {\r\n        marginTop: 80,\r\n        marginBottom: 50,\r\n        width: 500,\r\n        height: 'auto',\r\n        alignSelf: 'center'\r\n    },\r\n    pokedex: {\r\n        backgroundColor: '#E5709B',\r\n        height: 150,\r\n        alignSelf: 'center',\r\n        width: width,\r\n        borderRadius: width/2 \r\n    },\r\n    pikachu: {\r\n        height: 130,\r\n        width: 'auto'\r\n    }\r\n}));\r\n\r\nconst width = 250\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <img className={classes.logo} src={pokedex} alt='pokedex logo' data-testid='pokedex-logo'/>\r\n            <Button data-cy=\"pokedex-pikachu\" className={classes.pokedex} component={Link} to=\"/pokemons\" data-testid='pikachu-button'>\r\n                <img  className={classes.pikachu} src={pikachu} alt='imagen pikachu'/>\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst baseUrl = 'https://pokeapi.co/api/v2/';\r\n\r\nconst getPokemons = async (offset) => {\r\n    const response = await axios.get(`${baseUrl}pokemon?limit=20&offset=${offset}`);\r\n    return response.data;\r\n};\r\n\r\nconst getPokemonByName = async (name) => {\r\n    const response = await axios.get(`${baseUrl}pokemon/${name}`);\r\n    return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getPokemons, getPokemonByName };","const filterReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'SET_FILTER':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setFilter = (word) => {\r\n    return {\r\n        type: 'SET_FILTER',\r\n        data: word\r\n    };\r\n};\r\n\r\nexport default filterReducer;","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport getPokemons from '../services/pokemons';\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOnePokemon } from '../reducers/individualPokemonReducer';\r\nimport { notificationError } from '../reducers/notificationReducer';\r\nimport { setFilter } from '../reducers/filterReducer';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(state => state.filter);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try {\r\n                if(filter){\r\n                    //IF THE FILTER STATE CHANGES WE WILL ATTEMP TO GET THAT POKEMON FROM pokeapi.co AND IF IT SUCCEEDS THEN WE REDIRECT TO THAT POKEMON\r\n                    const searchedPokemon = await getPokemons.getPokemonByName(filter);\r\n                    console.log(searchedPokemon);\r\n                    dispatch(getOnePokemon(searchedPokemon));\r\n                    if(searchedPokemon.name === filter){\r\n                        history.push(`/pokemons/${searchedPokemon.name}`);\r\n                    };\r\n                }\r\n            } catch (error) {\r\n                //IF IT FAILS WE SHOW THAT IN A NOTIFICATION AND THEN RETURN NULL SO NOTHING ELSE HAPPENS\r\n                console.log(error);\r\n                dispatch(notificationError('That pok√©mon doesnt exist! Try Again!'));\r\n                return null;\r\n            }\r\n        } \r\n        fetch();\r\n    }, [filter, dispatch, history])\r\n\r\n    const handleChange = async (event) => {\r\n        //WE DISPATCH A NEW FILTER STATE ONLY IF THE SEARCH BUTTON IS CLICKED\r\n        event.preventDefault();\r\n        const pokemon = event.target.filterInput.value;\r\n        const lowercasePokemon = pokemon.toLowerCase();\r\n        dispatch(setFilter(lowercasePokemon));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleChange}>\r\n                <input placeholder='Search...' name=\"filterInput\" data-cy=\"searchBar\"/>\r\n                <Button type=\"submit\" data-cy=\"searchBar-button\">Search</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import axios from 'axios';\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post('/login', credentials);\r\n    return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { login };","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\nconst baseUrl = '/reviews';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const request = await axios.get(baseUrl);\r\n  return request.data;\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteReview = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n\r\n  await axios.delete(`${baseUrl}/${id}`, config);\r\n};\r\n\r\nconst editReview = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, create, setToken, deleteReview, editReview };","import loginService from '../services/login';\r\nimport reviewsService from '../services/reviews';\r\nimport { notificationSuccess, notificationError } from './notificationReducer';\r\n\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'LOG_IN':\r\n    return action.data;\r\n  case 'LOGGED_IN':\r\n    return action.data;\r\n  case 'LOGOUT':\r\n    return null;\r\n  default: return state;\r\n  }\r\n}\r\n\r\nexport const existingLogin = () => {\r\n  //IF THERE IS ALREADY A USER LOGGED IN LOCALSTORAGE THEN WE JUST PASS THAT OBJECT TO OUR login STORE\r\n  const loggedUserJSON = window.localStorage.getItem('loggedUser');\r\n  if(loggedUserJSON){\r\n    const userLog = JSON.parse(loggedUserJSON);\r\n    reviewsService.setToken(userLog.token);\r\n    return {\r\n      type: 'LOGGED_IN',\r\n      data: userLog\r\n    };\r\n  };\r\n\r\n  return {\r\n    type: 'LOGOUT'\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  window.localStorage.removeItem('loggedUser');\r\n  return { type: 'LOGOUT' };\r\n};\r\n\r\nexport const newLogin = (credentials) => {\r\n  return async dispatch => {\r\n    try {\r\n      //WHEN A USER LOGS IN WE STORE HIS CREDENTIALS IN LOCALSTORAGE AND login STORE\r\n      const userLog = await loginService.login(credentials);\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(userLog));\r\n      reviewsService.setToken(userLog.token);\r\n      dispatch({\r\n        type: 'LOG_IN',\r\n        data: userLog\r\n      });\r\n      dispatch(notificationSuccess(`Welcome ${userLog.username}`));\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n      dispatch(notificationError('Incorrect Username or Password'));\r\n      window.localStorage.removeItem('loggedUser');\r\n    }\r\n  }\r\n}\r\n\r\nexport default loginReducer","import React from 'react';\r\nimport { Button, makeStyles, AppBar, Toolbar, Typography, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Filter from './Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../reducers/loginReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1\r\n  },\r\n  appBar: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap'\r\n  },\r\n  filter: {\r\n    position: 'absolute',\r\n    top: 95,\r\n    right: 50,\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\"\r\n  }\r\n}))\r\n\r\nconst AppBarPokemon = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.login);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(logoutUser());\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <AppBar position=\"static\" color=\"secondary\" className={classes.appBar}>\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n              <Button color=\"inherit\" component={Link} to=\"/\" data-cy='home-button'>\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/pokemons\" data-cy='pokedex-button'>\r\n                Pokedex\r\n              </Button>\r\n          </Typography>\r\n        </Toolbar>\r\n        <Toolbar variant=\"dense\">\r\n          {user !== null ? (\r\n            <div>\r\n              <Button color=\"inherit\" component={Link} to=\"/reviews\" data-cy=\"reviews-button\">Reviews</Button>\r\n              <Button onClick={handleLogOut} color=\"inherit\" to=\"/login\" data-cy=\"logout-button\" component={Link} className=\"logout-button\">\r\n                Log Out\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Button className={classes.button} color=\"inherit\" component={Link} to=\"/login\" data-cy=\"login-button\">Log In</Button>\r\n              <Button className={classes.button} color=\"inherit\" component={Link} to=\"/signUp\" data-cy=\"signUp-button\">Sign Up</Button>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n        <Toolbar variant=\"dense\">\r\n          <Filter />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AppBarPokemon;","import React from 'react';\r\nimport { Paper, makeStyles, Button } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Loading from './Loading';\r\nimport { capsFirstLetter, isEmpty } from '../utils/functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        backgroundColor: '#222222',\r\n        justifyContent: 'center',\r\n        padding: 10\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      backgroundColor: '#E5709B',\r\n      flexDirection: 'row',\r\n      flexWrap: 'nowrap',\r\n    },\r\n    image: {\r\n        width: 280,\r\n        height: 'auto',\r\n        alignSelf: 'flex-start',\r\n    },\r\n    text: {\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n    },\r\n    type: {\r\n        height: 25,\r\n        fontSize: 18,\r\n        fontFamily: 'Roboto, monospace',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        backgroundColor: '#c2185b',\r\n        borderRadius: 60,\r\n        marginBottom: 9\r\n    },\r\n    reviewButton: {\r\n        backgroundColor: '#c2185b',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 30,\r\n        width: 100,\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    },\r\n}));\r\n\r\nconst IndividualPokemon = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const pokemon = useSelector(state => state.individualPokemon);\r\n    const user = useSelector(state => state.login);\r\n\r\n    const handleReview = (p) => {\r\n        history.push(`/reviews/${p.name}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isEmpty(pokemon) ? <Loading /> : \r\n                (<div className={classes.root}>\r\n                    <Paper className={classes.paper} elevation={8} key={pokemon.name}>\r\n                        {pokemon.types.map(t => <div className={classes.type}>{t.type.name.toUpperCase()}</div>)}\r\n                        {pokemon.sprites.other[\"dream_world\"][\"front_default\"] !== null ? \r\n                        <img className={classes.image} alt={`${pokemon.name}'s sprite`} src={pokemon.sprites.other[\"dream_world\"][\"front_default\"]}/> :\r\n                        <img className={classes.image} alt={`${pokemon.name}'s sprite`} src={pokemon.sprites.other[\"official-artwork\"][\"front_default\"]}/>}\r\n                        <p className={classes.text}>#{pokemon.id}</p>\r\n                        <p className={classes.text}>{capsFirstLetter(pokemon.name)}</p>\r\n                        {pokemon.stats.map(s => (\r\n                            <p className={classes.text} key={s.stat.name}>{capsFirstLetter(s.stat.name)}: {s.base_stat}</p>\r\n                        ))}\r\n                        {/*THIS BUTTON SHOULD ONLY EXIST IF THERE IS A USER LOGGED IN BECAUSE ONLY LOGGED USERS CAN MAKE REVIEWS.*/}\r\n                        {user && <Button data-cy={`review-button-${pokemon.name}`} className={classes.reviewButton} onClick={() => handleReview(pokemon)}>Review</Button>}\r\n                    </Paper>\r\n                </div>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndividualPokemon;","import React from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = () => {\r\n    const notification = useSelector(state => state.notification);\r\n    if(!notification){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {notification.type === 'success' ? (\r\n                <Alert severity='success'>{notification.message}</Alert>    \r\n            ) : (\r\n                <Alert severity='error'>{notification.message}</Alert>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputs: {\r\n      margin: 10,\r\n      borderRadius: 5,\r\n      padding: 15,\r\n      height: 50,\r\n      width: 300,\r\n      alignSelf: 'center',\r\n      borderColor: 'black',\r\n      borderWidth: 1\r\n  },\r\n}));\r\n\r\nconst TextField = ({ field, placeholder, type }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <input className={classes.inputs} placeholder={placeholder} type={type} {...field} />\r\n  );\r\n};\r\n\r\nexport default TextField;","import React from 'react';\r\nimport TextField from './TextField';\r\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\r\nimport { Button, makeStyles, Paper } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { newLogin } from '../reducers/loginReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 100,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: '#E5709B',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n    },\r\n    logIn: {\r\n        backgroundColor: '#c2185b',\r\n        alignSelf: 'center',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 50,\r\n        width: 300,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10\r\n    },\r\n    error: {\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        color: 'red'\r\n    },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters'),\r\n});\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        console.log(event);\r\n        const credentials = {\r\n            username: event.username,\r\n            password: event.password,\r\n        };\r\n        dispatch(newLogin(credentials))\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Formik\r\n                    initialValues={{\r\n                        username:'',\r\n                        password:'',\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                    style={{backgroundColor: '#222222'}}\r\n                >\r\n                    <Form>\r\n                        <Field\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            component={TextField}\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"username\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"password\" />\r\n                        </div>\r\n                        <Button\r\n                            className={classes.logIn}\r\n                            type=\"submit\"\r\n                            data-cy=\"login-form-button\"\r\n                        >\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                </Formik>\r\n            </Paper>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Login;","import axios from 'axios';\r\nconst baseUrl = '/signUp';\r\n\r\nconst signUp = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials);\r\n    return response.data;\r\n};\r\n\r\nconst getUsers = async () => {\r\n    const response = await axios.get(baseUrl);\r\n    return response.data\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { signUp, getUsers };","import React from 'react';\r\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\r\nimport { Button, makeStyles, Paper } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport TextField from './TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport signUpService from '../services/signUp';\r\nimport { newLogin } from '../reducers/loginReducer';\r\nimport { notificationError } from '../reducers/notificationReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 100,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: '#E5709B',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n    },\r\n    signUp: {\r\n        backgroundColor: '#c2185b',\r\n        alignSelf: 'center',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 50,\r\n        width: 300,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10\r\n    },\r\n    error: {\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        color: 'red'\r\n    },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters')\r\n        .max(20, 'Username must not contain more than 20 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Password must contain at least 5 characters')\r\n        .max(20, 'Password must not contain more than 20 characters'),\r\n    passwordConfirmation: yup\r\n        .string()\r\n        .oneOf([yup.ref('password'), null], 'Password must be the same!'),\r\n    name: yup\r\n        .string()\r\n        .required()\r\n});\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        console.log(event)\r\n        const credentials = {\r\n            username: event.username,\r\n            password: event.password,\r\n            name: event.name\r\n        };\r\n        try {\r\n            const user = await signUpService.signUp(credentials);\r\n            if(user){\r\n                dispatch(newLogin(credentials));\r\n                history.push('/');\r\n            };\r\n        } catch (error) {\r\n            dispatch(notificationError('Your account was not created, try again!'));\r\n            return null;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Formik\r\n                    initialValues={{\r\n                        username:'',\r\n                        password:'',\r\n                        name:''\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <Form>\r\n                        <Field\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            component={TextField}\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"username\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"password\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"Password Confirmation\"\r\n                            placeholder=\"Password Confirmation\"\r\n                            name=\"passwordConfirmation\"\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"passwordConfirmation\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"name\"\r\n                            placeholder=\"name\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"name\" />\r\n                        </div>\r\n                        <Button\r\n                            className={classes.signUp}\r\n                            type=\"submit\"\r\n                            data-cy=\"button-signUp\"\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Formik>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import reviewsService from '../services/reviews';\r\n\r\nconst reviewsReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_REVIEWS':\r\n            return action.data;\r\n        case 'NEW_REVIEW':\r\n            return [...state, action.data];\r\n        case 'DELETE_REVIEW':\r\n            return state.filter(r => r.id !== action.data.id);\r\n        case 'EDIT_REVIEW': {\r\n            //PLANNING TO ADD A WAY TO EDIT REVIEWS\r\n            const id = action.data.id\r\n            const reviewToEdit = state.find(r => r.id === id)\r\n            const editedReview = {\r\n                ...reviewToEdit,\r\n                content: reviewToEdit.content,\r\n                rating: reviewToEdit.rating\r\n            };\r\n            return state.map(r => r.id === id ? editedReview : r);\r\n        };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const initReviews = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const reviews = await reviewsService.getAll();\r\n            dispatch({\r\n                type: 'INIT_REVIEWS',\r\n                data: reviews,\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const newReview = (content) => {\r\n    return async dispatch => {\r\n        const review = await reviewsService.create(content);\r\n        dispatch({\r\n            type: 'NEW_REVIEW',\r\n            data: review,\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteReview = (review) => {\r\n    return async dispatch => {\r\n        await reviewsService.deleteReview(review.id);\r\n        dispatch({\r\n            type: 'DELETE_REVIEW',\r\n            data: review\r\n        });\r\n    };\r\n};\r\n\r\n//PLANNING TO ADD A WAY TO EDIT REVIEW LATER ON\r\nexport const editReview = (id, content) => {\r\n    return async dispatch => {\r\n        const editedReview = await reviewsService.editReview(id, content);\r\n        dispatch({\r\n            type: 'EDIT_REVIEW',\r\n            data: editedReview,\r\n        });\r\n    };\r\n};\r\n\r\nexport default reviewsReducer;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport { deleteReview } from '../reducers/reviewsReducer';\r\nimport { capsFirstLetter } from '../utils/functions';\r\nimport { notificationSuccess } from '../reducers/notificationReducer';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    noReviews: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        width: 450,\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        backgroundColor: '#E5709B',\r\n        borderRadius: 30,\r\n        marginTop: 100,\r\n        borderStyle: 'solid',\r\n        borderColor: '#c2185b'\r\n    },\r\n    reviewContainerStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin: 'auto',\r\n        width: 400,\r\n        backgroundColor: '#E5709B',\r\n        borderRadius: 30,\r\n        marginTop: 10,\r\n        borderStyle: 'solid',\r\n        borderColor: '#c2185b'\r\n    },\r\n    parent:{\r\n        fontFamily: 'Roboto, monospace',\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n        width: 250\r\n    },\r\n    text: {\r\n        justifyContent: 'space-around',\r\n        alignItems: 'flex-start',\r\n        fontFamily: 'Roboto, monospace',\r\n    },\r\n    ratingContainerStyle: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        borderStyle: 'solid',\r\n        color: '#c2185b',\r\n        borderColor: '#c2185b',\r\n        marginTop: 10,\r\n        marginLeft: 5\r\n    },\r\n    contentStyle: {\r\n        alignSelf: 'flex-start',\r\n        marginLeft: 10\r\n    },\r\n    image: {\r\n        height: 125,\r\n        width: 'auto',\r\n        alignSelf: 'flex-end',\r\n        marginTop: 10,\r\n        marginRight: 7,\r\n    },\r\n    delete: {\r\n        backgroundColor: '#c2185b',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 30,\r\n        width: 100,\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    },\r\n    parent2:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        position: 'relative',\r\n        float: 'right'\r\n    }\r\n}))\r\n\r\nconst Reviews = () => {\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.login);\r\n    const reviews = useSelector(state => state.reviews);\r\n    const dispatch = useDispatch();\r\n\r\n    //IF THERE ARE REVIEWS IN THE DATABASE WE FILTER EVERY REVIEW TO CHECK IF THE LOGGED USER HAS MADE ANY REVIEWS AND STORE THEM IN THIS VARIABLE\r\n    const userReviews = reviews ? reviews.filter(r => r.user.username === user.username) : null;\r\n\r\n    const handleDelete = (review) => {\r\n        //WE CONFIRM WITH THE USER IF HE REALLY WANTS TO DELETE THIS REVIEW\r\n        const result = window.confirm('Do you really want to delete this review?');\r\n        if(result){\r\n            dispatch(deleteReview(review));\r\n            dispatch(notificationSuccess('Review deleted'));\r\n        };\r\n    };\r\n\r\n    return (\r\n        <>  \r\n            {userReviews.length === 0 ? (\r\n                <div className={classes.noReviews}><p style={{ fontSize: 25, color: 'black', fontFamily: 'Roboto, monospace' }}>You haven't reviewed a pokemon yet</p></div>\r\n                ) : (\r\n                userReviews.map(r => {\r\n                    return (\r\n                        <div className={classes.reviewContainerStyle}>\r\n                            <div className={classes.parent}>\r\n                                <div className={classes.text}>\r\n                                    <div className={classes.ratingContainerStyle}>\r\n                                        <p>{r.rating}</p>\r\n                                    </div>\r\n                                    <div className={classes.contentStyle}>\r\n                                        <p>{capsFirstLetter(r.content)}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.parent2}>\r\n                                <img  className={classes.image} src={r.pokemon.sprite} alt={`${r.pokemon.name}'s sprite`}/>\r\n                                <Button className={classes.delete} onClick={() => handleDelete(r)} type=\"button\" data-cy=\"delete-review-button\">Delete</Button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reviews;","const manyPokemonsKey = (offset) => {\r\n    return `pokemon-offset:${offset}-limit:20`;\r\n};\r\n\r\nexport const loadPokemonsFromLS = (offset = 0) => {\r\n    const pokemons = JSON.parse(localStorage.getItem(manyPokemonsKey(offset)));\r\n\r\n    if(pokemons === null) {\r\n        throw new Error(`Pokemons with offset: ${offset} not found`);\r\n    };\r\n\r\n    return pokemons;\r\n};\r\n\r\nexport const savePokemonsList = (offset, pokemons) => {\r\n    if(offset === undefined || typeof pokemons !== 'object'){\r\n        throw new Error('offset and pokemons are needed to save in localStorage');\r\n    };\r\n\r\n    localStorage.setItem(manyPokemonsKey(offset), JSON.stringify(pokemons));\r\n};","import getPokemons from '../services/pokemons';\r\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\r\n\r\nconst pokemonsReducer = (state = {}, action) => { \r\n    switch(action.type){\r\n        case 'INIT_POKEMONS':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const initPokemons = (pokemons) => {\r\n    return { type: 'INIT_POKEMONS', data: pokemons };\r\n};\r\n\r\nexport const fetchEverything = async (offset, dispatch) => {\r\n    try {\r\n        const pokemons = loadPokemonsFromLS(offset);\r\n        return dispatch(initPokemons(pokemons));\r\n    } catch (error) {\r\n        const pokemonsData = await getPokemons.getPokemons(offset);\r\n        let pokemonsObject = pokemonsData;\r\n        savePokemonsList(offset, pokemonsObject);\r\n        return dispatch(initPokemons(pokemonsData));\r\n    };\r\n};\r\n\r\nexport default pokemonsReducer;","import React from 'react';\r\nimport { Button, makeStyles, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newReview } from '../reducers/reviewsReducer';\r\nimport { useHistory } from 'react-router';\r\nimport { capsFirstLetter } from '../utils/functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center',\r\n        margin: 'auto',\r\n        marginTop: 100,\r\n        marginBottom: 100,\r\n        width: 450\r\n    },\r\n    input: {\r\n        margin: 10,\r\n        borderRadius: 5,\r\n        padding: 15,\r\n        height: 50,\r\n        width: 300,\r\n        alignSelf: 'center',\r\n        borderColor: 'black',\r\n        borderWidth: 1\r\n    },\r\n    review: {\r\n        backgroundColor: '#c2185b',\r\n        alignSelf: 'center',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 50,\r\n        width: 200,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10\r\n    },\r\n    rating: {\r\n        maxWidth: 40,\r\n        alignSelf: 'center',\r\n        marginLeft: 10,\r\n        marginTop: 5\r\n    },\r\n    text: {\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        fontFamily: 'Roboto, monospace',\r\n        alignSelf: 'center',\r\n        marginBottom: 0,\r\n        marginTop: -6,\r\n        color: 'white'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: '#E5709B',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n    },\r\n    image: {\r\n        width: 280,\r\n        height: 'auto',\r\n        alignSelf: 'flex-end',\r\n    },\r\n    div: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'space-around',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start'\r\n    }\r\n}))\r\n\r\nconst NewReview = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const pokemonObject = useSelector(state => state.individualPokemon);\r\n    const history = useHistory();\r\n\r\n    const pokemon = {\r\n        //THE POKEMON OBJECT OBTAINED FOR OUR INDIVIDUAL POKEMON FROM pokeapi.co IS WAY TOO BIG SO WE ONLY \r\n        //COPY THE RELEVANT INFO IN A NEW OBJECT AND PASS THAT TO OUR DATABASE\r\n        name: pokemonObject.name,\r\n        sprite: pokemonObject.sprites.other[\"official-artwork\"][\"front_default\"],\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const review = (event.target.reviewInput.value).toString();\r\n        const rating = Number(event.target.reviewRating.value);\r\n        const credentials = { content: review, rating: rating, pokemon: pokemon };\r\n        dispatch(newReview(credentials));\r\n        history.push('/reviews');\r\n    };\r\n    \r\n    let optionsArray = [];\r\n\r\n    for(let i = 0; i <= 100; i++){\r\n        optionsArray.push(i);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className={classes.div}>\r\n                        <p className={classes.text}>{`Reviewing ${pokemon.name}`}</p>\r\n                        <img className={classes.image} src={pokemon.sprite} alt={`${capsFirstLetter(pokemon.name)}'s sprite`}/>\r\n                    </div>\r\n                    <input name=\"reviewInput\" placeholder=\"Write a Review!\" className={classes.input} data-cy=\"new-review-input\"/>\r\n                    <div className={classes.container}>\r\n                        <p className={classes.text}>Rate This Pokemon</p>\r\n                        <select name=\"reviewRating\" data-cy=\"select-rating\" className={classes.rating}>\r\n                            {optionsArray.map(o => <option data-cy={`select-rating-${o}`} key={o} value={o}>{o}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <Button name=\"review-button\" type=\"submit\" className={classes.review} data-cy=\"review-form-button\">Post Review</Button>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewReview;","import React, { useEffect } from 'react';\r\nimport PokemonsDisplay from './components/PokemonsDisplay';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport AppBarPokemon from './components/AppBar';\r\nimport IndividualPokemon from './components/IndividualPokemon';\r\nimport Notification from './components/Notification';\r\nimport Login from '../src/components/Login';\r\nimport SignUp from '../src/components/SignUp';\r\nimport Reviews from '../src/components/Reviews';\r\nimport { fetchEverything } from './reducers/pokemonsReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { existingLogin } from './reducers/loginReducer';\r\nimport './App.css'\r\nimport NewReview from './components/NewReview';\r\nimport { initReviews } from './reducers/reviewsReducer';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const offset = useSelector(state => state.offset);\r\n  \r\n  useEffect(() => {\r\n    //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\r\n    fetchEverything(offset, dispatch)\r\n  }, [offset, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(existingLogin());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(initReviews());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#222222' }}>\r\n      <Notification />\r\n      <AppBarPokemon />\r\n      <Switch>\r\n        <Route path=\"/pokemons/:name\">\r\n          <IndividualPokemon/>\r\n        </Route>\r\n        <Route path=\"/pokemons\">\r\n          <PokemonsDisplay/>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/signUp\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/reviews/edit/:id\">\r\n          <NewReview/>\r\n        </Route>\r\n        <Route path=\"/reviews/:name\">\r\n          <NewReview/>\r\n        </Route>\r\n        <Route path=\"/reviews\">\r\n          <Reviews />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import usersService from '../services/signUp';\r\n\r\n//JUST KEEPING THIS HERE IN CASE I WANT TO ADD A KIND OF TWEETERLIKE WALL OR SOMETHING\r\n\r\nconst userReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_USER':\r\n            return action.data\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const getUsers = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await usersService.getUsers();\r\n            dispatch({\r\n                type: 'INIT_USERS',\r\n                data: users,\r\n            });\r\n        } catch (error) {\r\n            throw new Error('There are no users in the database!');\r\n        };\r\n    };\r\n};\r\n\r\nexport default userReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport pokemonsReducer from './reducers/pokemonsReducer';\r\nimport offsetReducer from './reducers/offsetReducer';\r\nimport currentPageReducer from './reducers/currentPageReducer';\r\nimport individualPokemonReducer from './reducers/individualPokemonReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport loginReducer from './reducers/loginReducer';\r\nimport filterReducer from './reducers/filterReducer'\r\nimport reviewsReducer from './reducers/reviewsReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\nconst reducer = combineReducers({\r\n    pokemons: pokemonsReducer,\r\n    offset: offsetReducer,\r\n    currentPage: currentPageReducer,\r\n    individualPokemon: individualPokemonReducer,\r\n    login: loginReducer,\r\n    notification: notificationReducer,\r\n    filter: filterReducer,\r\n    reviews: reviewsReducer,\r\n    users: userReducer,\r\n});\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => {\r\n    const storeNow = store.getState();\r\n    console.log(storeNow);\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}