{"version":3,"sources":["reducers/notificationReducer.js","hooks/usePagination.js","reducers/offsetReducer.js","reducers/currentPageReducer.js","components/Pagination.js","reducers/individualPokemonReducer.js","img/loading-transparent.gif","components/Loading.js","utils/functions.js","components/PokemonsDisplay.js","img/Pok√©dex_logo.png","img/pikachu(1).png","components/Home.js","services/pokemons.js","reducers/filterReducer.js","components/Filter.js","services/login.js","services/reviews.js","reducers/loginReducer.js","components/AppBar.js","components/IndividualPokemon.js","components/Notification.js","components/TextField.js","components/Login.js","services/signUp.js","components/SignUp.js","reducers/reviewsReducer.js","components/Reviews.js","utils/localStoragePokemons.js","reducers/pokemonsReducer.js","components/NewReview.js","App.js","reducers/userReducer.js","store.js","index.js"],"names":["timeout","DOTS","range","start","end","length","Array","from","_","idx","setOffset","value","type","data","Number","offsetReducer","state","action","pageSelection","page","currentPageReducer","newPage","useStyles","makeStyles","theme","root","marginTop","display","flexDirection","flexWrap","justifyContent","button","width","borderRadius","height","backgroundColor","fontFamily","fontWeight","paddingLeft","paddingRight","active","color","nextPrevious","Pagination","totalCount","siblingCount","pageSize","classes","dispatch","useDispatch","currentPage","useSelector","pagesTotal","Math","ceil","paginationRange","useMemo","totalPageCount","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","optionsArray","i","push","onPageChange","pageNumber","className","Button","onClick","map","onChange","event","target","style","marginLeft","getOnePokemon","pokemon","individualPokemonReducer","newState","parent","margin","gif","Loading","src","loading","alt","capsFirstLetter","str","toCapitalize","split","toUpperCase","substr","join","padding","flexGrow","backGroundColor","paper","spacing","palette","text","secondary","gridItem","textDecoration","p","textAlign","PokemonsDisplay","pokemonsObject","pokemons","count","useState","setPokemons","useEffect","a","urlArray","results","forEach","r","axios","get","url","pokemonNow","awaitingPokemons","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","ghost","ice","steel","Grid","container","item","xs","component","Link","handleClick","to","name","Paper","types","elevation","sprites","other","logo","marginBottom","alignSelf","pokedex","pikachu","Home","baseUrl","getPokemons","offset","response","getPokemonByName","notificationError","message","clearInterval","setTimeout","notificationSuccess","notificationReducer","filterReducer","Filter","filter","history","useHistory","searchedPokemon","console","error","fetch","handleChange","preventDefault","filterInput","lowercasePokemon","toLowerCase","onSubmit","placeholder","login","credentials","post","token","getAll","request","create","newObject","config","headers","Authorization","setToken","newToken","deleteReview","id","delete","editReview","put","newLogin","loginService","userLog","window","localStorage","setItem","JSON","stringify","reviewsService","username","removeItem","loginReducer","appBar","position","top","right","AppBarPokemon","user","Box","AppBar","Toolbar","variant","Typography","fontSize","reviewButton","IndividualPokemon","obj","individualPokemon","Object","keys","stats","s","stat","base_stat","t","abilities","ability","Notification","notification","Alert","severity","inputs","borderColor","borderWidth","TextField","field","logIn","validationSchema","yup","shape","required","password","Login","initialValues","label","signUp","getUsers","passwordConfirmation","oneOf","SignUp","signUpService","reviewsReducer","reviewToEdit","find","editedReview","content","rating","noReviews","borderStyle","reviewContainerStyle","alignItems","ratingContainerStyle","contentStyle","image","marginRight","parent2","float","Reviews","reviews","userReviews","handleDelete","review","confirm","sprite","manyPokemonsKey","loadPokemonsFromLS","parse","getItem","Error","savePokemonsList","undefined","initPokemons","fetchEverything","pokemonsData","pokemonsReducer","NewReview","pokemonObject","reviewInput","toString","reviewRating","o","App","loggedUserJSON","existingLogin","path","userReducer","reducer","combineReducers","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23f961b3.chunk.js","sourcesContent":["const notificationReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'NOTIFICATION_ERROR':\r\n            return action.data;\r\n        case 'NOTIFICATION_SUCCESS':\r\n            return action.data;\r\n        case 'NOTIFICATION_DELETE':\r\n            return null;\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nlet timeout;\r\n\r\nexport const notificationError = (message) => {\r\n    return async dispatch => {\r\n        clearInterval(timeout);\r\n        timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'NOTIFICATION_DELETE',\r\n            })\r\n        }, 4000);\r\n\r\n        dispatch({\r\n            type: 'NOTIFICATION_ERROR',\r\n            data: {\r\n                message,\r\n                type: 'error'\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport const notificationSuccess = (message) => {\r\n    return async dispatch => {\r\n        clearInterval(timeout);\r\n        timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'NOTIFICATION_DELETE',\r\n            })\r\n        }, 4000);\r\n\r\n        dispatch({\r\n            type: 'NOTIFICATION_SUCCESS',\r\n            data: {\r\n                message,\r\n                type: 'success'\r\n            },\r\n        });\r\n    };\r\n};\r\n\r\nexport default notificationReducer;","import { useMemo } from \"react\";\r\n\r\nexport const DOTS = '...';\r\n\r\n//THIS CREATES AN ARRAY AND SETS THE ELEMENTS FROM START TO END\r\nconst range = (start, end) => {\r\n    let length = end - start + 1;\r\n    //SO IF FOR EXPAMPLE LENGTH IS 5 THEN THE ARRAY PRODUCED WOULD BE [1, 2, 3, 4, 5]\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n}\r\n\r\nexport const usePagination = ({ totalCount, pageSize, siblingCount = 1, currentPage }) => {\r\n\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        //IF THE NUMBER OF PAGES IF LESS THAN WHAT WE WANT TO SHOW IN OUR COMPONENT (DOESN'T APPLY TO OUR APP), WE RETURN THIS.\r\n        if(totalPageNumbers >= totalPageCount){\r\n            return range(1, totalPageCount);\r\n        };\r\n\r\n        //CALCULATE LEFT ND RIGHT SIBLING INDEX\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount);\r\n\r\n        //WE ONLY WANT TO SHOW DOTS IF THE DIFFERENCE BETWEEN OUR FIRST/LAST PAGE AND ITS SIBLING INDEX IS MORE THAN 2 \r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        //IF WE ONLY WANT TO SHOW RIGHT DOTS\r\n        if(!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        };\r\n\r\n        //IF WE ONLY WANT TO SHOW LEFT DOTS\r\n        if(!shouldShowRightDots && shouldShowLeftDots) {\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\r\n\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        };\r\n\r\n        //WE WANT TO SHOW DOTS RIGHT AND LEFT\r\n        if(shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        };\r\n\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};","const offsetReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'OFFSET':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setOffset = (value) => {\r\n    const offset = Number((value * 20) - 20);\r\n    return {\r\n        type: 'OFFSET',\r\n        data: offset,\r\n    };\r\n};\r\n\r\nexport default offsetReducer;","const currentPageReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        case 'SELECTION':\r\n            const newPage = action.data;\r\n            return newPage;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const pageSelection = (page) => {\r\n    return {\r\n        type: 'SELECTION',\r\n        data: page,\r\n    };\r\n};\r\n\r\nexport default currentPageReducer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DOTS, usePagination } from '../hooks/usePagination';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setOffset } from '../reducers/offsetReducer';\r\nimport { pageSelection } from '../reducers/currentPageReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 20,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center'\r\n    },\r\n    button: {\r\n        width: 20,\r\n        borderRadius: 50,\r\n        height: 30,\r\n        backgroundColor: '#E5709B',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 3,\r\n        paddingRight: 3\r\n    },\r\n    active: {\r\n        width: 20,\r\n        borderRadius: 50,\r\n        height: 30,\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 6,\r\n        paddingRight: 6\r\n    },\r\n    nextPrevious: {\r\n        width: 20,\r\n        borderRadius: 33,\r\n        height: 30,\r\n        backgroundColor: '#E5709B',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 3,\r\n        paddingRight: 3\r\n    },\r\n}));\r\n\r\nconst Pagination = ({ totalCount, siblingCount = 1, pageSize }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentPage = useSelector(state => state.currentPage);\r\n    const pagesTotal = Math.ceil(totalCount / pageSize);\r\n    const paginationRange = usePagination({ currentPage, totalCount, siblingCount, pageSize });\r\n\r\n    let optionsArray = [];\r\n\r\n    //JUST AN ARRAY TO BE ABLE TO SELECT ANY PAGE INSTEAD OF CLICKING MANY TIMES TO GO TO A SPECIFIC PAGE\r\n    for(let i = 1; i <= pagesTotal; i++){\r\n        optionsArray.push(i);\r\n    };\r\n\r\n    const onPageChange = (pageNumber) => {\r\n        dispatch(setOffset(pageNumber));\r\n        dispatch(pageSelection(pageNumber));\r\n    };\r\n    \r\n    const onNext = () => {\r\n        const page = Number(currentPage + 1);\r\n        dispatch(setOffset(page));\r\n        dispatch({ type: 'INCREMENT' });\r\n    };\r\n    \r\n    const onPrevious = () => {\r\n        const page = Number(currentPage - 1);\r\n        dispatch(setOffset(page));\r\n        dispatch({ type: 'DECREMENT' });\r\n    };\r\n    \r\n    const handleSelect = (event) => {\r\n        const page = Number(event.target.value);\r\n        dispatch(setOffset(page));\r\n        dispatch(pageSelection(page));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {currentPage === 1 ? null : (\r\n                <Button className={classes.nextPrevious} onClick={onPrevious} data-cy='previous-button'>&lt;</Button>\r\n            )}\r\n            {paginationRange.map(pageNumber => {\r\n                if(pageNumber === DOTS){\r\n                    return <div>&#8230;</div>\r\n                }\r\n\r\n                return(\r\n                    <div>\r\n                        {pageNumber === currentPage ? (\r\n                            <Button key={currentPage} className={classes.active} data-cy={`pagination-button-${pageNumber}`} onClick={() => onPageChange(pageNumber)} >{pageNumber}</Button>) : (\r\n                            <Button key={pageNumber} className={classes.button} data-cy={`pagination-button-${pageNumber}`} onClick={() => onPageChange(pageNumber)} >{pageNumber}</Button>\r\n                        )}\r\n                    </div>\r\n                );\r\n            })};\r\n            {currentPage === 45 ? null : (\r\n                <Button className={classes.nextPrevious} onClick={onNext} data-cy='next-button'>&gt;</Button>\r\n            )}\r\n            <select data-cy=\"select-page\" onChange={handleSelect} style={{ marginLeft: 10 }}>\r\n                {optionsArray.map((pageNumber, i) => {\r\n                    return <option data-cy={`select-page-${pageNumber}`} value={pageNumber} key={i}>{pageNumber}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","const individualPokemonReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'GET_POKEMON':\r\n            const newState = action.data;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const getOnePokemon = (pokemon) => {\r\n    return {\r\n        type: 'GET_POKEMON',\r\n        data: pokemon\r\n    };\r\n};\r\n\r\nexport default individualPokemonReducer;","export default __webpack_public_path__ + \"static/media/loading-transparent.757857ce.gif\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport loading from '../img/loading-transparent.gif'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    parent: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: 'auto',\r\n    },\r\n    gif: {\r\n        height: 50,\r\n        width: 50,\r\n        margin: 'auto',\r\n    }\r\n}))\r\n\r\nconst Loading = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.parent}>\r\n            <img className={classes.gif} src={loading} alt=\"Loading gif\" data-cy=\"loading-gif\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","export const capsFirstLetter = (str) => {\r\n    //SOME POKEMONS' STATS ARE SEPARATED BY A '-'. THIS FUNCTION ELIMINATES IT AND CAPITALIZES THE FIRST LETTER OF EACH WORD.\r\n    let toCapitalize = str.split(/-/);\r\n\r\n    for (let i = 0; i < toCapitalize.length; i++) {\r\n      toCapitalize[i] = toCapitalize[i][0].toUpperCase() + toCapitalize[i].substr(1);\r\n    };\r\n\r\n    const joined = toCapitalize.join(' ');\r\n\r\n    return joined;\r\n};\r\n\r\nexport const isEmpty = (obj) => {\r\n    return obj && Object.keys(obj).length === 0;\r\n};","import React, { useEffect, useState } from 'react';\r\nimport Pagination from './Pagination';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOnePokemon } from '../reducers/individualPokemonReducer';\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\nimport { capsFirstLetter } from '../utils/functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 10,\r\n        flexGrow: 1,\r\n        backGroundColor: '#222222'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        justifyContent: 'center'\r\n    },\r\n    gridItem : {\r\n        textDecoration: 'none',\r\n    },\r\n    p: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nconst PokemonsDisplay = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const pokemonsObject = useSelector(state => state.pokemons);\r\n    const pageSize = 20;\r\n    const totalCount = pokemonsObject.count;\r\n    const [pokemons, setPokemons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const awaitingPokemons = async () => {\r\n            //THIS FUNCTION GETS EVERY POKEMON ON OUR pokemons STORE AND PUSHES THEM TO A REACT STATE.\r\n            //EVERY TIME OUR pokemons STORE CHANGES THIS FUNCTION RUNS FETCHES THE NEW POKEMMONS ONCE AGAIN\r\n            let urlArray = [];\r\n\r\n            pokemonsObject.results.forEach(async (r) => {\r\n                const pokemonNow = await axios.get(r.url);\r\n                urlArray.push(pokemonNow.data);\r\n                if(urlArray.length > 0){\r\n                    setPokemons([...urlArray]);\r\n                };\r\n            });\r\n        };\r\n        awaitingPokemons();\r\n    }, [pokemonsObject]);\r\n\r\n    const handleClick = (p) => {\r\n        //IF A POKEMON IS CLICKED WE STORE IT INTO OUR individualPokemon STORE\r\n        dispatch(getOnePokemon(p));\r\n    };\r\n\r\n    const colors = {\r\n        fire: '#FDDFDF',\r\n        grass: '#DEFDE0',\r\n        electric: '#FCF7DE',\r\n        water: '#DEF3FD',\r\n        ground: '#f4e7da',\r\n        rock: '#d5d5d4',\r\n        fairy: '#fceaff',\r\n        poison: '#98d7a5',\r\n        bug: '#f8d5a3',\r\n        dragon: '#97b3e6',\r\n        psychic: '#eaeda1',\r\n        flying: '#F5F5F5',\r\n        fighting: '#E6E0D4',\r\n        normal: '#F5F5F5',\r\n        ghost: '#5c6cac',\r\n        ice: '#98D8D8',\r\n        steel: '#787887',\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                {pokemons.length < 18 ? <Loading /> : \r\n                (\r\n                    <Grid container spacing={3}>\r\n                        {pokemons.map((p) => (\r\n                    <Grid item xs={3} key={p.name} className={classes.gridItem} component={Link} onClick={() => handleClick(p)} to={`/pokemons/${p.name}`} data-cy={`pokemon-button-${p.name}`}>\r\n                            <Paper className={classes.paper} style={{ backgroundColor: colors[p.types[0].type.name] }} elevation={10}>\r\n                                <p className={`textDisplay ${classes.p}`}>{capsFirstLetter(p.name)}</p>\r\n                                <img className='image' alt={`${p.name}'s sprite`} src={p.sprites.other[\"official-artwork\"][\"front_default\"]}/>\r\n                            </Paper>\r\n                    </Grid>\r\n                ))}\r\n                    </Grid>\r\n                )}\r\n            <Pagination\r\n                totalCount={totalCount} \r\n                pageSize={pageSize}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PokemonsDisplay;","export default __webpack_public_path__ + \"static/media/Pok√©dex_logo.907dcf3a.png\";","export default __webpack_public_path__ + \"static/media/pikachu(1).91857373.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport pokedex from '../img/Pok√©dex_logo.png';\r\nimport pikachu from '../img/pikachu(1).png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        flexGrow: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    logo: {\r\n        marginTop: 80,\r\n        marginBottom: 50,\r\n        width: 500,\r\n        height: 'auto',\r\n        alignSelf: 'center'\r\n    },\r\n    pokedex: {\r\n        backgroundColor: '#E5709B',\r\n        height: 150,\r\n        alignSelf: 'center',\r\n        width: width,\r\n        borderRadius: width/2 \r\n    },\r\n    pikachu: {\r\n        height: 130,\r\n        width: 'auto'\r\n    }\r\n}));\r\n\r\nconst width = 250\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <img className={classes.logo} src={pokedex} alt='pokedex logo' data-testid='pokedex-logo'/>\r\n            <Button data-cy=\"pokedex-pikachu\" className={classes.pokedex} component={Link} to=\"/pokemons\" data-testid='pikachu-button'>\r\n                <img  className={classes.pikachu} src={pikachu} alt='imagen pikachu'/>\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst baseUrl = 'https://pokeapi.co/api/v2/';\r\n\r\nconst getPokemons = async (offset) => {\r\n    const response = await axios.get(`${baseUrl}pokemon?limit=20&offset=${offset}`);\r\n    return response.data;\r\n};\r\n\r\nconst getPokemonByName = async (name) => {\r\n    const response = await axios.get(`${baseUrl}pokemon/${name}`);\r\n    return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getPokemons, getPokemonByName };","const filterReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'SET_FILTER':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setFilter = (word) => {\r\n    return {\r\n        type: 'SET_FILTER',\r\n        data: word\r\n    };\r\n};\r\n\r\nexport default filterReducer;","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport getPokemons from '../services/pokemons';\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOnePokemon } from '../reducers/individualPokemonReducer';\r\nimport { notificationError } from '../reducers/notificationReducer';\r\nimport { setFilter } from '../reducers/filterReducer';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(state => state.filter);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try {\r\n                if(filter){\r\n                    //IF THE FILTER STATE CHANGES WE WILL ATTEMP TO GET THAT POKEMON FROM pokeapi.co AND IF IT SUCCEEDS THEN WE REDIRECT TO THAT POKEMON\r\n                    const searchedPokemon = await getPokemons.getPokemonByName(filter);\r\n                    dispatch(getOnePokemon(searchedPokemon));\r\n                    if(searchedPokemon.name === filter){\r\n                        history.push(`/pokemons/${searchedPokemon.name}`);\r\n                    };\r\n                }\r\n            } catch (error) {\r\n                //IF IT FAILS WE SHOW THAT IN A NOTIFICATION AND THEN RETURN NULL SO NOTHING ELSE HAPPENS\r\n                console.error(error);\r\n                dispatch(notificationError('That pok√©mon doesnt exist! Try Again!'));\r\n                return null;\r\n            }\r\n        } \r\n        fetch();\r\n    }, [filter, dispatch, history])\r\n\r\n    const handleChange = async (event) => {\r\n        //WE DISPATCH A NEW FILTER STATE ONLY IF THE SEARCH BUTTON IS CLICKED\r\n        event.preventDefault();\r\n        const pokemon = event.target.filterInput.value;\r\n        const lowercasePokemon = pokemon.toLowerCase();\r\n        dispatch(setFilter(lowercasePokemon));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleChange}>\r\n                <input placeholder='Search...' name=\"filterInput\" data-cy=\"searchBar\"/>\r\n                <Button type=\"submit\" data-cy=\"searchBar-button\">Search</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import axios from 'axios';\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post('/login', credentials);\r\n    return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { login };","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\nconst baseUrl = '/reviews';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const request = await axios.get(baseUrl);\r\n  return request.data;\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteReview = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n\r\n  await axios.delete(`${baseUrl}/${id}`, config);\r\n};\r\n\r\nconst editReview = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, create, setToken, deleteReview, editReview };","import loginService from '../services/login';\r\nimport reviewsService from '../services/reviews';\r\nimport { notificationSuccess, notificationError } from './notificationReducer';\r\n\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'LOG_IN':\r\n    return action.data;\r\n  case 'LOGGED_IN':\r\n    return action.data;\r\n  case 'LOGOUT':\r\n    return null;\r\n  default: return state;\r\n  }\r\n}\r\n\r\nexport const existingLogin = () => {\r\n  //IF THERE IS ALREADY A USER LOGGED IN LOCALSTORAGE THEN WE JUST PASS THAT OBJECT TO OUR login STORE\r\n  const loggedUserJSON = window.localStorage.getItem('loggedUser');\r\n  if(loggedUserJSON){\r\n    const userLog = JSON.parse(loggedUserJSON);\r\n    reviewsService.setToken(userLog.token);\r\n    return {\r\n      type: 'LOGGED_IN',\r\n      data: userLog\r\n    };\r\n  };\r\n\r\n  return {\r\n    type: 'LOGOUT'\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  window.localStorage.removeItem('loggedUser');\r\n  return { type: 'LOGOUT' };\r\n};\r\n\r\nexport const newLogin = (credentials) => {\r\n  return async dispatch => {\r\n    try {\r\n      //WHEN A USER LOGS IN WE STORE HIS CREDENTIALS IN LOCALSTORAGE AND login STORE\r\n      const userLog = await loginService.login(credentials);\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(userLog));\r\n      reviewsService.setToken(userLog.token);\r\n      dispatch({\r\n        type: 'LOG_IN',\r\n        data: userLog\r\n      });\r\n      dispatch(notificationSuccess(`Welcome ${userLog.username}`));\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n      dispatch(notificationError('Incorrect Username or Password'));\r\n      window.localStorage.removeItem('loggedUser');\r\n    }\r\n  }\r\n}\r\n\r\nexport default loginReducer","import React from 'react';\r\nimport { Button, makeStyles, AppBar, Toolbar, Typography, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Filter from './Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../reducers/loginReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1\r\n  },\r\n  appBar: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap'\r\n  },\r\n  filter: {\r\n    position: 'absolute',\r\n    top: 95,\r\n    right: 50,\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\"\r\n  }\r\n}))\r\n\r\nconst AppBarPokemon = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.login);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(logoutUser());\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <AppBar position=\"static\" color=\"secondary\" className={classes.appBar}>\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n              <Button color=\"inherit\" component={Link} to=\"/\" data-cy='home-button'>\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/pokemons\" data-cy='pokedex-button'>\r\n                Pokedex\r\n              </Button>\r\n          </Typography>\r\n        </Toolbar>\r\n        <Toolbar variant=\"dense\">\r\n          {user !== null ? (\r\n            <div>\r\n              <Button color=\"inherit\" component={Link} to=\"/reviews\" data-cy=\"reviews-button\">Reviews</Button>\r\n              <Button onClick={handleLogOut} color=\"inherit\" to=\"/login\" data-cy=\"logout-button\" component={Link} className=\"logout-button\">\r\n                Log Out\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Button className={classes.button} color=\"inherit\" component={Link} to=\"/login\" data-cy=\"login-button\">Log In</Button>\r\n              <Button className={classes.button} color=\"inherit\" component={Link} to=\"/signUp\" data-cy=\"signUp-button\">Sign Up</Button>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n        <Toolbar variant=\"dense\">\r\n          <Filter />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AppBarPokemon;","import React from 'react';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Loading from './Loading';\r\nimport { capsFirstLetter, isEmpty } from '../utils/functions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    type: {\r\n        height: 25,\r\n        fontSize: 18,\r\n        fontFamily: 'Roboto, monospace',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        color: 'black',\r\n        borderRadius: 60,\r\n        padding: 7,\r\n        margin: 5,\r\n    },\r\n    reviewButton: {\r\n        backgroundColor: '#c2185b',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 30,\r\n        width: 100,\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    },\r\n}));\r\n\r\nconst IndividualPokemon = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const pokemon = useSelector(state => state.individualPokemon);\r\n    const user = useSelector(state => state.login);\r\n\r\n    const handleReview = (p) => {\r\n        history.push(`/reviews/${p.name}`);\r\n    };\r\n\r\n    const colors = {\r\n        fire: '#FDDFDF',\r\n        grass: '#DEFDE0',\r\n        electric: '#FCF7DE',\r\n        water: '#DEF3FD',\r\n        ground: '#f4e7da',\r\n        rock: '#d5d5d4',\r\n        fairy: '#fceaff',\r\n        poison: '#98d7a5',\r\n        bug: '#f8d5a3',\r\n        dragon: '#97b3e6',\r\n        psychic: '#eaeda1',\r\n        flying: '#F5F5F5',\r\n        fighting: '#E6E0D4',\r\n        normal: '#F5F5F5',\r\n        ghost: '#5c6cac',\r\n        ice: '#98D8D8',\r\n        steel: '#787887'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isEmpty(pokemon) ? <Loading /> : \r\n                (\r\n                <div>\r\n                    <div className='root'>\r\n                        <div className='imageContainer' elevation={15} style={{ backgroundColor: colors[pokemon.types[0].type.name] }}>\r\n                            <img className='image-individual' alt={`${pokemon.name}'s sprite`} src={pokemon.sprites.other[\"official-artwork\"][\"front_default\"]}/>\r\n                        </div>\r\n                        <div className='statsContainer' elevation={8} key={pokemon.name}>\r\n                            <p className='text'>#{pokemon.id}</p>\r\n                            <p className='text'>{capsFirstLetter(pokemon.name)}</p>\r\n                            {pokemon.stats.map(s => (\r\n                                <p className='text' key={s.stat.name}>{capsFirstLetter(s.stat.name)}: {s.base_stat}</p>\r\n                            ))}\r\n                            {/*THIS BUTTON SHOULD ONLY EXIST IF THERE IS A USER LOGGED IN BECAUSE ONLY LOGGED USERS CAN MAKE REVIEWS.*/}\r\n                            {user && <Button data-cy={`review-button-${pokemon.name}`} className={classes.reviewButton} onClick={() => handleReview(pokemon)}>Review</Button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='root'>\r\n                        <div className='type-text-container'>\r\n                            <div className='typesContainer'>\r\n                                {pokemon.types.map(t => <div className={classes.type} style={{ backgroundColor: colors[t.type.name]}}>{t.type.name.toUpperCase()}</div>)}\r\n                            </div>\r\n                            <div className='textContainer'>\r\n                                <div>\r\n                                <p className='text'>Ability: <br></br><p className='text-content'>{capsFirstLetter(pokemon.abilities[0].ability.name)}</p></p>\r\n                                </div>\r\n                                <div>\r\n                                {pokemon[\"held_items\"].length > 0 ? <p className='text'>Items: <br></br><ul>{pokemon[\"held_items\"].map(i => <li className='text-content'>{capsFirstLetter(i.item.name)}</li>)}</ul></p> : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndividualPokemon;","import React from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = () => {\r\n    const notification = useSelector(state => state.notification);\r\n    if(!notification){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {notification.type === 'success' ? (\r\n                <Alert severity='success'>{notification.message}</Alert>    \r\n            ) : (\r\n                <Alert severity='error'>{notification.message}</Alert>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputs: {\r\n      margin: 10,\r\n      borderRadius: 5,\r\n      padding: 15,\r\n      height: 50,\r\n      width: 300,\r\n      alignSelf: 'center',\r\n      borderColor: 'black',\r\n      borderWidth: 1\r\n  },\r\n}));\r\n\r\nconst TextField = ({ field, placeholder, type }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <input className={classes.inputs} placeholder={placeholder} type={type} {...field} />\r\n  );\r\n};\r\n\r\nexport default TextField;","import React from 'react';\r\nimport TextField from './TextField';\r\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\r\nimport { Button, makeStyles, Paper } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { newLogin } from '../reducers/loginReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 100,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: '#E5709B',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n    },\r\n    logIn: {\r\n        backgroundColor: '#c2185b',\r\n        alignSelf: 'center',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 50,\r\n        width: 300,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10\r\n    },\r\n    error: {\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        color: 'red'\r\n    },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters'),\r\n});\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        const credentials = {\r\n            username: event.username,\r\n            password: event.password,\r\n        };\r\n        dispatch(newLogin(credentials))\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Formik\r\n                    initialValues={{\r\n                        username:'',\r\n                        password:'',\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                    style={{backgroundColor: '#222222'}}\r\n                >\r\n                    <Form>\r\n                        <Field\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            component={TextField}\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"username\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"password\" />\r\n                        </div>\r\n                        <Button\r\n                            className={classes.logIn}\r\n                            type=\"submit\"\r\n                            data-cy=\"login-form-button\"\r\n                        >\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                </Formik>\r\n            </Paper>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Login;","import axios from 'axios';\r\nconst baseUrl = '/signUp';\r\n\r\nconst signUp = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials);\r\n    return response.data;\r\n};\r\n\r\nconst getUsers = async () => {\r\n    const response = await axios.get(baseUrl);\r\n    return response.data\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { signUp, getUsers };","import React from 'react';\r\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\r\nimport { Button, makeStyles, Paper } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport TextField from './TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport signUpService from '../services/signUp';\r\nimport { newLogin } from '../reducers/loginReducer';\r\nimport { notificationError } from '../reducers/notificationReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 100,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: '#E5709B',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n    },\r\n    signUp: {\r\n        backgroundColor: '#c2185b',\r\n        alignSelf: 'center',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 50,\r\n        width: 300,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10\r\n    },\r\n    error: {\r\n        fontFamily: 'Roboto, monospace',\r\n        fontWeight: 'bold',\r\n        fontSize: 14,\r\n        color: 'red'\r\n    },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Username must contain at least 5 characters')\r\n        .max(20, 'Username must not contain more than 20 characters'),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n        .min(5, 'Password must contain at least 5 characters')\r\n        .max(20, 'Password must not contain more than 20 characters'),\r\n    passwordConfirmation: yup\r\n        .string()\r\n        .oneOf([yup.ref('password'), null], 'Password must be the same!'),\r\n    name: yup\r\n        .string()\r\n        .required()\r\n});\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onSubmit = async (event) => {\r\n        const credentials = {\r\n            username: event.username,\r\n            password: event.password,\r\n            name: event.name\r\n        };\r\n        try {\r\n            const user = await signUpService.signUp(credentials);\r\n            if(user){\r\n                dispatch(newLogin(credentials));\r\n                history.push('/');\r\n            };\r\n        } catch (error) {\r\n            dispatch(notificationError('Your account was not created, try again!'));\r\n            return null;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Formik\r\n                    initialValues={{\r\n                        username:'',\r\n                        password:'',\r\n                        name:''\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <Form>\r\n                        <Field\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            component={TextField}\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"username\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"password\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"Password Confirmation\"\r\n                            placeholder=\"Password Confirmation\"\r\n                            name=\"passwordConfirmation\"\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"passwordConfirmation\" />\r\n                        </div>\r\n                        <Field\r\n                            label=\"name\"\r\n                            placeholder=\"name\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                        />\r\n                        <div className={classes.error}>\r\n                            <ErrorMessage name=\"name\" />\r\n                        </div>\r\n                        <Button\r\n                            className={classes.signUp}\r\n                            type=\"submit\"\r\n                            data-cy=\"button-signUp\"\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Formik>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import reviewsService from '../services/reviews';\r\n\r\nconst reviewsReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_REVIEWS':\r\n            return action.data;\r\n        case 'NEW_REVIEW':\r\n            return [...state, action.data];\r\n        case 'DELETE_REVIEW':\r\n            return state.filter(r => r.id !== action.data.id);\r\n        case 'EDIT_REVIEW': {\r\n            //PLANNING TO ADD A WAY TO EDIT REVIEWS\r\n            const id = action.data.id\r\n            const reviewToEdit = state.find(r => r.id === id)\r\n            const editedReview = {\r\n                ...reviewToEdit,\r\n                content: reviewToEdit.content,\r\n                rating: reviewToEdit.rating\r\n            };\r\n            return state.map(r => r.id === id ? editedReview : r);\r\n        };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const initReviews = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const reviews = await reviewsService.getAll();\r\n            dispatch({\r\n                type: 'INIT_REVIEWS',\r\n                data: reviews,\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const newReview = (content) => {\r\n    return async dispatch => {\r\n        const review = await reviewsService.create(content);\r\n        dispatch({\r\n            type: 'NEW_REVIEW',\r\n            data: review,\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteReview = (review) => {\r\n    return async dispatch => {\r\n        await reviewsService.deleteReview(review.id);\r\n        dispatch({\r\n            type: 'DELETE_REVIEW',\r\n            data: review\r\n        });\r\n    };\r\n};\r\n\r\n//PLANNING TO ADD A WAY TO EDIT REVIEW LATER ON\r\nexport const editReview = (id, content) => {\r\n    return async dispatch => {\r\n        const editedReview = await reviewsService.editReview(id, content);\r\n        dispatch({\r\n            type: 'EDIT_REVIEW',\r\n            data: editedReview,\r\n        });\r\n    };\r\n};\r\n\r\nexport default reviewsReducer;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport { deleteReview } from '../reducers/reviewsReducer';\r\nimport { capsFirstLetter } from '../utils/functions';\r\nimport { notificationSuccess } from '../reducers/notificationReducer';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    noReviews: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        width: 450,\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        backgroundColor: '#E5709B',\r\n        borderRadius: 30,\r\n        marginTop: 100,\r\n        borderStyle: 'solid',\r\n        borderColor: '#c2185b'\r\n    },\r\n    reviewContainerStyle: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        margin: 'auto',\r\n        width: 400,\r\n        backgroundColor: '#E5709B',\r\n        borderRadius: 30,\r\n        marginTop: 10,\r\n        borderStyle: 'solid',\r\n        borderColor: '#c2185b'\r\n    },\r\n    parent:{\r\n        fontFamily: 'Roboto, monospace',\r\n        fontSize: 15,\r\n        textAlign: 'center',\r\n        width: 250\r\n    },\r\n    text: {\r\n        justifyContent: 'space-around',\r\n        alignItems: 'flex-start',\r\n        fontFamily: 'Roboto, monospace',\r\n    },\r\n    ratingContainerStyle: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        borderStyle: 'solid',\r\n        color: '#c2185b',\r\n        borderColor: '#c2185b',\r\n        marginTop: 10,\r\n        marginLeft: 5\r\n    },\r\n    contentStyle: {\r\n        alignSelf: 'flex-start',\r\n        marginLeft: 10\r\n    },\r\n    image: {\r\n        height: 125,\r\n        width: 'auto',\r\n        alignSelf: 'flex-end',\r\n        marginTop: 10,\r\n        marginRight: 7,\r\n    },\r\n    delete: {\r\n        backgroundColor: '#c2185b',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 30,\r\n        width: 100,\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 10,\r\n        alignSelf: 'center'\r\n    },\r\n    parent2:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        position: 'relative',\r\n        float: 'right'\r\n    }\r\n}))\r\n\r\nconst Reviews = () => {\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.login);\r\n    const reviews = useSelector(state => state.reviews);\r\n    const dispatch = useDispatch();\r\n\r\n    //IF THERE ARE REVIEWS IN THE DATABASE WE FILTER EVERY REVIEW TO CHECK IF THE LOGGED USER HAS MADE ANY REVIEWS AND STORE THEM IN THIS VARIABLE\r\n    const userReviews = reviews ? reviews.filter(r => r.user.username === user.username) : null;\r\n\r\n    const handleDelete = (review) => {\r\n        //WE CONFIRM WITH THE USER IF HE REALLY WANTS TO DELETE THIS REVIEW\r\n        const result = window.confirm('Do you really want to delete this review?');\r\n        if(result){\r\n            dispatch(deleteReview(review));\r\n            dispatch(notificationSuccess('Review deleted'));\r\n        };\r\n    };\r\n\r\n    return (\r\n        <>  \r\n            {userReviews.length === 0 ? (\r\n                <div className={classes.noReviews}><p style={{ fontSize: 25, color: 'black', fontFamily: 'Roboto, monospace' }}>You haven't reviewed a pokemon yet</p></div>\r\n                ) : (\r\n                userReviews.map(r => {\r\n                    return (\r\n                        <div className={classes.reviewContainerStyle}>\r\n                            <div className={classes.parent}>\r\n                                <div className={classes.text}>\r\n                                    <div className={classes.ratingContainerStyle}>\r\n                                        <p>{r.rating}</p>\r\n                                    </div>\r\n                                    <div className={classes.contentStyle}>\r\n                                        <p>{capsFirstLetter(r.content)}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.parent2}>\r\n                                <img  className={classes.image} src={r.pokemon.sprite} alt={`${r.pokemon.name}'s sprite`}/>\r\n                                <Button className={classes.delete} onClick={() => handleDelete(r)} type=\"button\" data-cy=\"delete-review-button\">Delete</Button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reviews;","const manyPokemonsKey = (offset) => {\r\n    return `pokemon-offset:${offset}-limit:20`;\r\n};\r\n\r\nexport const loadPokemonsFromLS = (offset = 0) => {\r\n    const pokemons = JSON.parse(localStorage.getItem(manyPokemonsKey(offset)));\r\n\r\n    if(pokemons === null) {\r\n        throw new Error(`Pokemons with offset: ${offset} not found`);\r\n    };\r\n\r\n    return pokemons;\r\n};\r\n\r\nexport const savePokemonsList = (offset, pokemons) => {\r\n    if(offset === undefined || typeof pokemons !== 'object'){\r\n        throw new Error('offset and pokemons are needed to save in localStorage');\r\n    };\r\n\r\n    localStorage.setItem(manyPokemonsKey(offset), JSON.stringify(pokemons));\r\n};","import getPokemons from '../services/pokemons';\r\nimport { loadPokemonsFromLS, savePokemonsList } from '../utils/localStoragePokemons';\r\n\r\nconst pokemonsReducer = (state = {}, action) => { \r\n    switch(action.type){\r\n        case 'INIT_POKEMONS':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const initPokemons = (pokemons) => {\r\n    return { type: 'INIT_POKEMONS', data: pokemons };\r\n};\r\n\r\nexport const fetchEverything = async (offset, dispatch) => {\r\n    try {\r\n        const pokemons = loadPokemonsFromLS(offset);\r\n        return dispatch(initPokemons(pokemons));\r\n    } catch (error) {\r\n        const pokemonsData = await getPokemons.getPokemons(offset);\r\n        let pokemonsObject = pokemonsData;\r\n        savePokemonsList(offset, pokemonsObject);\r\n        return dispatch(initPokemons(pokemonsData));\r\n    };\r\n};\r\n\r\nexport default pokemonsReducer;","import React from 'react';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newReview } from '../reducers/reviewsReducer';\r\nimport { useHistory } from 'react-router';\r\nimport { capsFirstLetter } from '../utils/functions';\r\nimport { notificationError } from '../reducers/notificationReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    review: {\r\n        display: 'block',\r\n        backgroundColor: '#c2185b',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        height: 50,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        margin: 'auto',\r\n        marginTop: 40\r\n    },\r\n    text: {\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n        fontFamily: 'Roboto, monospace',\r\n        textAlign: 'center',\r\n        marginBottom: 0,\r\n        color: 'white'\r\n    },\r\n}))\r\n\r\nconst NewReview = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const pokemonObject = useSelector(state => state.individualPokemon);\r\n    const user = useSelector(state => state.login);\r\n    const reviews = useSelector(state => state.reviews);\r\n    const history = useHistory();\r\n\r\n    const pokemon = {\r\n        //THE POKEMON OBJECT OBTAINED FOR OUR INDIVIDUAL POKEMON FROM pokeapi.co IS WAY TOO BIG SO WE ONLY \r\n        //COPY THE RELEVANT INFO IN A NEW OBJECT AND PASS THAT TO OUR DATABASE\r\n        name: pokemonObject.name,\r\n        sprite: pokemonObject.sprites.other[\"official-artwork\"][\"front_default\"],\r\n    };\r\n\r\n    const userReviews = reviews ? reviews.filter(r => r.user.username === user.username) : null;\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const review = (event.target.reviewInput.value).toString();\r\n        const rating = Number(event.target.reviewRating.value);\r\n        const credentials = { content: review, rating: rating, pokemon: pokemon };\r\n\r\n        if(userReviews.find(r => r.pokemon.name === pokemon.name)){\r\n            dispatch(notificationError('You have already reviewed this pokemon!'));\r\n            return null;\r\n        };\r\n\r\n        if(!review){\r\n            dispatch(notificationError('The review field cannot be empty.'));\r\n            return null;\r\n        };\r\n\r\n        dispatch(newReview(credentials));\r\n        history.push('/reviews');\r\n    };\r\n    \r\n    let optionsArray = [];\r\n\r\n    for(let i = 0; i <= 100; i++){\r\n        optionsArray.push(i);\r\n    };\r\n\r\n    return (\r\n        <div className='root'>\r\n            <div className='imageContainer' style={{ backgroundColor: '#E5709B' }}>\r\n                <p className='text' style={{ textAlign: 'center'}}>{`Reviewing ${capsFirstLetter(pokemon.name)}`}</p>\r\n                <img className='image-individual' src={pokemon.sprite} alt={`${pokemon.name}'s sprite`}/>\r\n            </div>\r\n            <div className='imageContainer' style={{ backgroundColor: '#E5709B' }}>\r\n                <form onSubmit={onSubmit}>\r\n                    <input name=\"reviewInput\" placeholder=\"Write a Review!\" className='input' data-cy=\"new-review-input\"/>\r\n                    <div className={classes.container}>\r\n                        <p className={classes.text}>Rate This Pokemon</p>\r\n                        <select name=\"reviewRating\" data-cy=\"select-rating\" className='rating-input'>\r\n                            {optionsArray.map(o => <option data-cy={`select-rating-${o}`} key={o} value={o}>{o}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <Button name=\"review-button\" type=\"submit\" className={`review-button ${classes.review}`} data-cy=\"review-form-button\">Post Review</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewReview;","import React, { useEffect } from 'react';\r\nimport PokemonsDisplay from './components/PokemonsDisplay';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport AppBarPokemon from './components/AppBar';\r\nimport IndividualPokemon from './components/IndividualPokemon';\r\nimport Notification from './components/Notification';\r\nimport Login from '../src/components/Login';\r\nimport SignUp from '../src/components/SignUp';\r\nimport Reviews from '../src/components/Reviews';\r\nimport { fetchEverything } from './reducers/pokemonsReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { existingLogin } from './reducers/loginReducer';\r\nimport './App.css'\r\nimport NewReview from './components/NewReview';\r\nimport { initReviews } from './reducers/reviewsReducer';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const offset = useSelector(state => state.offset);\r\n  \r\n  useEffect(() => {\r\n    //FETCHES 20 OBJECTS THAT CONTAIN AN URL TO AN INDIVIDUAL POKEMON\r\n    fetchEverything(offset, dispatch)\r\n  }, [offset, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(existingLogin());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(initReviews());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#222222' }}>\r\n      <Notification />\r\n      <AppBarPokemon />\r\n      <Switch>\r\n        <Route path=\"/pokemons/:name\">\r\n          <IndividualPokemon/>\r\n        </Route>\r\n        <Route path=\"/pokemons\">\r\n          <PokemonsDisplay/>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/signUp\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/reviews/edit/:id\">\r\n          <NewReview/>\r\n        </Route>\r\n        <Route path=\"/reviews/:name\">\r\n          <NewReview/>\r\n        </Route>\r\n        <Route path=\"/reviews\">\r\n          <Reviews />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import usersService from '../services/signUp';\r\n\r\n//JUST KEEPING THIS HERE IN CASE I WANT TO ADD A KIND OF TWEETERLIKE WALL OR SOMETHING\r\n\r\nconst userReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_USER':\r\n            return action.data\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const getUsers = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await usersService.getUsers();\r\n            dispatch({\r\n                type: 'INIT_USERS',\r\n                data: users,\r\n            });\r\n        } catch (error) {\r\n            throw new Error('There are no users in the database!');\r\n        };\r\n    };\r\n};\r\n\r\nexport default userReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport pokemonsReducer from './reducers/pokemonsReducer';\r\nimport offsetReducer from './reducers/offsetReducer';\r\nimport currentPageReducer from './reducers/currentPageReducer';\r\nimport individualPokemonReducer from './reducers/individualPokemonReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport loginReducer from './reducers/loginReducer';\r\nimport filterReducer from './reducers/filterReducer'\r\nimport reviewsReducer from './reducers/reviewsReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\nconst reducer = combineReducers({\r\n    pokemons: pokemonsReducer,\r\n    offset: offsetReducer,\r\n    currentPage: currentPageReducer,\r\n    individualPokemon: individualPokemonReducer,\r\n    login: loginReducer,\r\n    notification: notificationReducer,\r\n    filter: filterReducer,\r\n    reviews: reviewsReducer,\r\n    users: userReducer,\r\n});\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}